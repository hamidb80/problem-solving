[
    {"Combination Sum": ["Letter Combinations of a Phone Number", "Combination Sum II", "Combinations", "Combination Sum III", "Factor Combinations", "Combination Sum IV"]},
    {"Sudoku Solver": ["Valid Sudoku", "Unique Paths III"]},
    {"Two Sum": ["3Sum", "4Sum", "Two Sum II - Input Array Is Sorted", "Two Sum III - Data structure design", "Subarray Sum Equals K", "Two Sum IV - Input is a BST", "Two Sum Less Than K", "Max Number of K-Sum Pairs", "Count Good Meals", "Count Number of Pairs With Absolute Difference K", "Number of Pairs of Strings With Concatenation Equal to Target", "Find All K-Distant Indices in an Array"]},
    {"First Missing Positive": ["Missing Number", "Find the Duplicate Number", "Find All Numbers Disappeared in an Array", "Couples Holding Hands"]},
    {"Valid Sudoku": ["Sudoku Solver", "Check if Every Row and Column Contains All Numbers"]},
    {"Count and Say": ["Encode and Decode Strings", "String Compression"]},
    {"Trapping Rain Water": ["Container With Most Water", "Product of Array Except Self", "Trapping Rain Water II", "Pour Water"]},
    {"Combination Sum II": ["Combination Sum"]},
    {"Search Insert Position": ["First Bad Version"]},
    {"Next Permutation": ["Permutations", "Permutations II", "Permutation Sequence", "Palindrome Permutation II", "Minimum Adjacent Swaps to Reach the Kth Smallest Number"]},
    {"Substring with Concatenation of All Words": ["Minimum Window Substring"]},
    {"Find First and Last Position of Element in Sorted Array": ["First Bad Version", "Plates Between Candles", "Find Target Indices After Sorting Array"]},
    {"Search in Rotated Sorted Array": ["Search in Rotated Sorted Array II", "Find Minimum in Rotated Sorted Array", "Pour Water Between Buckets to Make Water Levels Equal"]},
    {"Implement strStr()": ["Shortest Palindrome", "Repeated Substring Pattern"]},
    {"Longest Valid Parentheses": ["Valid Parentheses"]},
    {"Divide Two Integers": []},
    {"Number of Flowers in Full Bloom": ["Meeting Rooms II", "Minimum Interval to Include Each Query"]},
    {"Dynamic Unpivoting of a Table": ["Rearrange Products Table"]},
    {"Intersection of Multiple Arrays": ["Intersection of Two Arrays", "Intersection of Two Arrays II", "Find Smallest Common Element in All Rows", "Intersection of Three Sorted Arrays", "Find the Difference of Two Arrays"]},
    {"Count Number of Rectangles Containing Each Point": ["Queries on Number of Points Inside a Circle"]},
    {"Longest Path With Different Adjacent Characters": ["Diameter of Binary Tree", "Longest Univalue Path"]},
    {"Dynamic Pivoting of a Table": ["Product's Price for Each Store"]},
    {"Maximum Cost of Trip With K Highways": ["Minimum Cost to Reach Destination in Time", "Minimum Cost to Reach City With Discounts"]},
    {"Count Lattice Points Inside a Circle": ["Queries on Number of Points Inside a Circle"]},
    {"Number of Ways to Buy Pens and Pencils": ["Find Three Consecutive Integers That Sum to a Given Number", "Count Integers With Even Digit Sum"]},
    {"Find Closest Number to Zero": ["Find K Closest Elements"]},
    {"Maximum Trailing Zeros in a Cornered Path": ["Factorial Trailing Zeroes", "Bomb Enemy", "Abbreviating the Product of a Range"]},
    {"Design an ATM Machine": ["Simple Bank System", "Minimum Number of Operations to Convert Time"]},
    {"Number of Times a Driver Was a Passenger": ["Hopper Company Queries I", "Hopper Company Queries II", "Hopper Company Queries III"]},
    {"Minimum Rounds to Complete All Tasks": ["Climbing Stairs"]},
    {"Maximum Score of a Node Sequence": ["Get the Maximum Score"]},
    {"Calculate Digit Sum of a String": ["Add Digits", "Find Triangular Sum of an Array"]},
    {"Maximum Total Beauty of the Gardens": ["Split Array Largest Sum"]},
    {"Largest Number After Digit Swaps by Parity": ["Largest Number At Least Twice of Others", "Sort Array By Parity", "Sort Array By Parity II", "Smallest String With Swaps", "Rearrange Array Elements by Sign"]},
    {"Minimize Result by Adding Parentheses to Expression": ["Basic Calculator", "Different Ways to Add Parentheses", "Solve the Equation"]},
    {"Count Positions on Street With Required Brightness": ["Range Addition", "Brightest Position on Street"]},
    {"Root Equals Sum of Children": []},
    {"The Users That Are Eligible for Discount": ["The Number of Users That Are Eligible for Discount"]},
    {"Maximum Product After K Increments": ["Minimum Size Subarray Sum", "Minimum Increment to Make Array Unique", "Minimum Operations to Make the Array Increasing"]},
    {"Add Two Integers": []},
    {"Minimum Number of Operations to Convert Time": ["Coin Change", "Design an ATM Machine"]},
    {"Encrypt and Decrypt Strings": ["Implement Trie (Prefix Tree)", "Word Search II", "Implement Trie II (Prefix Tree)"]},
    {"Sum of Scores of Built Strings": ["Longest Happy Prefix"]},
    {"Number of Ways to Select Buildings": []},
    {"Check if an Array Is Consecutive": ["Binary Tree Longest Consecutive Sequence", "Binary Tree Longest Consecutive Sequence II", "Consecutive Characters"]},
    {"Users With Two Purchases Within Seven Days": ["Biggest Window Between Visits"]},
    {"Find Players With Zero or One Losses": ["Lowest Common Ancestor of a Binary Tree"]},
    {"Maximum Candies Allocated to K Children": ["Koko Eating Bananas", "Minimum Limit of Balls in a Bag", "Minimum Speed to Arrive on Time", "Maximum Number of Removable Characters", "Minimized Maximum of Products Distributed to Any Store", "Minimum Time to Complete Trips"]},
    {"Maximum Value of K Coins From Piles": ["Coin Change", "Coin Change 2"]},
    {"Minimum Bit Flips to Convert Number": ["Minimum Flips to Make a OR b Equal to c"]},
    {"Minimum Health to Beat Game": ["Dungeon Game", "Eliminate Maximum Number of Monsters"]},
    {"Find the Difference of Two Arrays": ["Intersection of Two Arrays", "Intersection of Two Arrays II", "Intersection of Multiple Arrays"]},
    {"Minimum Deletions to Make Array Beautiful": ["Minimum Deletions to Make Character Frequencies Unique", "Minimum Operations to Make the Array Alternating"]},
    {"Find Palindrome With Fixed Length": ["Palindrome Number", "Find the Closest Palindrome"]},
    {"Find Triangular Sum of an Array": ["Pascal's Triangle II", "Calculate Digit Sum of a String"]},
    {"Maximum Sum Score of Array": ["Subarray Sum Equals K", "Find Pivot Index", "Find the Middle Index in Array"]},
    {"Divide Array Into Equal Pairs": ["Sort Array by Increasing Frequency"]},
    {"Count Hills and Valleys in an Array": ["Find Peak Element", "Monotonic Array", "Minimum Subsequence in Non-Increasing Order"]},
    {"Longest Substring of One Repeating Character": ["Merge Intervals", "Longest Repeating Character Replacement", "Consecutive Characters", "Create Sorted Array through Instructions"]},
    {"Maximize Number of Subsequences in a String": ["Longest Common Subsequence"]},
    {"Minimum White Tiles After Covering With Carpets": ["Edit Distance"]},
    {"Count Collisions on a Road": ["Asteroid Collision", "Car Fleet", "Last Moment Before All Ants Fall Out of a Plank", "Car Fleet II"]},
    {"Maximum Points in an Archery Competition": ["Maximum Product of the Length of Two Palindromic Subsequences"]},
    {"Minimum Operations to Halve Array Sum": ["Remove Stones to Minimize the Total"]},
    {"The Number of Users That Are Eligible for Discount": ["Nth Highest Salary", "The Users That Are Eligible for Discount"]},
    {"Find All K-Distant Indices in an Array": ["Two Sum", "Shortest Word Distance"]},
    {"Minimum Weighted Subgraph With the Required Paths": ["Minimum Cost to Make at Least One Valid Path in a Grid"]},
    {"Distance to a Cycle in Undirected Graph": ["Paths in Maze That Lead to Same Room"]},
    {"Maximize the Topmost Element After K Moves": ["Gas Station"]},
    {"Count Artifacts That Can Be Extracted": ["Maximal Square"]},
    {"Number of Single Divisor Triplets": ["Count Array Pairs Divisible by K"]},
    {"Finding the Topic of Each Post": ["Group Sold Products By The Date"]},
    {"Sort the Jumbled Numbers": ["Map Sum Pairs"]},
    {"Most Frequent Number Following Key In an Array": ["Sort Array by Increasing Frequency"]},
    {"Minimum Number of Moves to Make Palindrome": ["Minimum Insertion Steps to Make a String Palindrome"]},
    {"All Ancestors of a Node in a Directed Acyclic Graph": ["Number of Restricted Paths From First to Last Node"]},
    {"Append K Integers With Minimal Sum": ["Remove K Digits", "Find All Numbers Disappeared in an Array", "Kth Missing Positive Number"]},
    {"Create Binary Tree From Descriptions": ["Convert Sorted List to Binary Search Tree", "Number Of Ways To Reconstruct A Tree"]},
    {"Replace Non-Coprime Numbers in Array": ["Remove All Adjacent Duplicates in String II", "Number of Pairs of Interchangeable Rectangles"]},
    {"Cells in a Range on an Excel Sheet": ["Excel Sheet Column Title", "Excel Sheet Column Number", "Matrix Cells in Distance Order"]},
    {"Minimum Time to Finish the Race": ["Minimum Skips to Arrive at Meeting On Time"]},
    {"Number of Ways to Build Sturdy Brick Wall": ["Brick Wall", "Bricks Falling When Hit"]},
    {"Number of Ways to Build House of Cards": ["Champagne Tower"]},
    {"Count Array Pairs Divisible by K": ["Number of Single Divisor Triplets", "Check If Array Pairs Are Divisible by k"]},
    {"Minimum Time to Complete Trips": ["Maximum Candies Allocated to K Children", "Minimum Speed to Arrive on Time", "Minimized Maximum of Products Distributed to Any Store", "Maximum Running Time of N Computers"]},
    {"Counting Words With a Given Prefix": ["Check If a Word Occurs As a Prefix of Any Word in a Sentence"]},
    {"Construct String With Repeat Limit": ["Rearrange String k Distance Apart"]},
    {"Minimum Number of Steps to Make Two Strings Anagram II": ["Minimum Number of Steps to Make Two Strings Anagram"]},
    {"Merge Nodes in Between Zeros": ["Linked List Components"]},
    {"Find Three Consecutive Integers That Sum to a Given Number": ["Longest Consecutive Sequence", "Number of Ways to Buy Pens and Pencils"]},
    {"Remove All Ones With Row and Column Flips II": ["Set Matrix Zeroes", "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix", "Remove All Ones With Row and Column Flips"]},
    {"Count Integers With Even Digit Sum": ["Sum of Digits of String After Convert", "Number of Ways to Buy Pens and Pencils"]},
    {"Maximum Split of Positive Even Integers": []},
    {"The Change in Global Rankings": []},
    {"Count Equal and Divisible Pairs in an Array": ["Count Number of Pairs With Absolute Difference K"]},
    {"Count Good Triplets in an Array": ["Count of Smaller Numbers After Self", "Increasing Triplet Subsequence", "Create Sorted Array through Instructions"]},
    {"Design Bitset": ["Design Underground System"]},
    {"Longest Winning Streak": []},
    {"Maximum AND Sum of Array": ["Minimum XOR Sum of Two Arrays"]},
    {"Unique Substrings With Equal Digit Frequency": ["Number of Equal Count Substrings", "Substrings That Begin and End With the Same Letter"]},
    {"Removing Minimum Number of Magic Beans": ["Minimum Moves to Equal Array Elements II", "Minimum Operations to Reduce X to Zero"]},
    {"Minimum Operations to Make the Array Alternating": ["Minimum Deletions to Make Array Beautiful", "Minimum Number of Flips to Make the Binary String Alternating"]},
    {"Count Operations to Obtain Zero": ["Number of Steps to Reduce a Number to Zero"]},
    {"Minimum Time to Remove All Cars Containing Illegal Goods": ["Minimum Number of K Consecutive Bit Flips"]},
    {"Amount of New Area Painted Each Day": ["Merge Intervals", "Describe the Painting", "Average Height of Buildings in Each Segment"]},
    {"Partition Array According to Given Pivot": ["Partition List", "Rearrange Array Elements by Sign"]},
    {"Sort Even and Odd Indices Independently": ["Sort Array By Parity", "Sort Array By Parity II"]},
    {"Minimum Difference in Sums After Removal of Elements": ["Product of Array Except Self", "Find Subsequence of Length K With the Largest Sum"]},
    {"Minimum Sum of Four Digit Number After Splitting Digits": ["Add Digits"]},
    {"Order Two Columns Independently": []},
    {"Minimum Cost to Set Cooking Time": ["Minimum Time Difference"]},
    {"Smallest Value of the Rearranged Number": ["Largest Number"]},
    {"The Number of Passengers in Each Bus II": []},
    {"Find All Lonely Numbers in the Array": ["Frequency of the Most Frequent Element"]},
    {"Find Substring With Given Hash Value": ["Distinct Echo Substrings"]},
    {"Groups of Strings": ["Word Ladder II", "Similar String Groups", "Largest Component Size by Common Factor"]},
    {"Minimum Number of Lines to Cover Points": ["Max Points on a Line", "Min Cost to Connect All Points"]},
    {"Maximum Good People Based on Statements": ["Maximum Score Words Formed by Letters"]},
    {"All Divisions With the Highest Score of a Binary Array": ["Ones and Zeroes", "Max Consecutive Ones II", "Count Subarrays With More Ones Than Zeros", "Array Partition I", "Divide Array in Sets of K Consecutive Numbers"]},
    {"Keep Multiplying Found Values by Two": ["Largest Number At Least Twice of Others", "Check If N and Its Double Exist"]},
    {"Minimum Cost of Buying Candies With Discount": ["Array Partition I", "Minimum Absolute Difference"]},
    {"Count Elements With Strictly Smaller and Greater Elements ": ["Find Smallest Letter Greater Than Target"]},
    {"Choose Numbers From Two Arrays in Range": ["Intersection of Two Arrays", "Intersection of Two Arrays II", "Minimum XOR Sum of Two Arrays", "Minimize Product Sum of Two Arrays"]},
    {"K Highest Ranked Items Within a Price Range": ["Kth Largest Element in an Array", "As Far from Land as Possible"]},
    {"Rearrange Array Elements by Sign": ["Wiggle Subsequence", "Sort Array By Parity II", "Partition Array According to Given Pivot", "Largest Number After Digit Swaps by Parity"]},
    {"Number of Ways to Divide a Long Corridor": ["Decode Ways II", "Minimum Cost to Cut a Stick", "Ways to Split Array Into Three Subarrays"]},
    {"Count the Hidden Sequences": []},
    {"The Number of Passengers in Each Bus I": []},
    {"Count Words Obtained After Adding a Letter": ["Strings Differ by One Character", "Count Substrings That Differ by One Character", "Maximum Score From Removing Substrings"]},
    {"Solving Questions With Brainpower": ["House Robber", "Frog Jump"]},
    {"Pour Water Between Buckets to Make Water Levels Equal": ["Search in Rotated Sorted Array", "Find Peak Element", "Minimum Moves to Equal Array Elements"]},
    {"Earliest Possible Day of Full Bloom": ["Minimum Number of Days to Make m Bouquets"]},
    {"Divide a String Into Groups of Size k": ["Text Justification", "Positions of Large Groups"]},
    {"Minimum Swaps to Group All 1's Together II": ["Minimum Swaps to Group All 1's Together"]},
    {"Maximum Running Time of N Computers": ["Minimum Moves to Equal Array Elements", "Sell Diminishing-Valued Colored Balls", "Maximum Number of Tasks You Can Assign", "Minimum Time to Complete Trips"]},
    {"Minimum Moves to Reach Target Score": ["Number of Steps to Reduce a Number to Zero", "Number of Steps to Reduce a Number in Binary Representation to One"]},
    {"Remove All Ones With Row and Column Flips": ["Score After Flipping Matrix", "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix", "Minimum Operations to Remove Adjacent Ones in Matrix", "Remove All Ones With Row and Column Flips II"]},
    {"Maximum Employees to Be Invited to a Meeting": ["Redundant Connection", "Parallel Courses III", "Process Restricted Friend Requests"]},
    {"Destroying Asteroids": ["Asteroid Collision"]},
    {"Stamping the Grid": ["Maximal Square", "Bomb Enemy", "Matrix Block Sum"]},
    {"Check if Every Row and Column Contains All Numbers": ["Valid Sudoku", "Matrix Diagonal Sum"]},
    {"Maximum Twin Sum of a Linked List": ["Reverse Linked List", "Palindrome Linked List", "Middle of the Linked List"]},
    {"Longest Palindrome by Concatenating Two Letter Words": ["Palindrome Pairs", "Longest Palindrome"]},
    {"Capitalize the Title": ["Detect Capital", "To Lower Case"]},
    {"Number of Laser Beams in a Bank": ["Set Matrix Zeroes"]},
    {"Check if All A's Appears Before All B's": ["Minimum Deletions to Make String Balanced", "Check if Array Is Sorted and Rotated", "Check if Numbers Are Ascending in a Sentence"]},
    {"Minimum Operations to Remove Adjacent Ones in Matrix": ["Set Matrix Zeroes", "01 Matrix", "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix", "Remove All Ones With Row and Column Flips"]},
    {"Recover the Original Array": ["Find Array Given Subset Sums", "Find Original Array From Doubled Array"]},
    {"Intervals Between Identical Elements": ["Continuous Subarray Sum"]},
    {"Execution of All Suffix Instructions Staying in a Grid": ["Out of Boundary Paths", "Robot Return to Origin"]},
    {"A Number After a Double Reversal": ["Reverse Integer", "Reverse Bits"]},
    {"Build the Equation": []},
    {"Abbreviating the Product of a Range": ["Factorial Trailing Zeroes", "Maximum Trailing Zeros in a Cornered Path"]},
    {"Check if a Parentheses String Can Be Valid": ["Valid Parentheses", "Generate Parentheses", "Valid Parenthesis String", "Minimum Remove to Make Valid Parentheses"]},
    {"Find All Possible Recipes from Given Supplies": ["Course Schedule II", "Count Good Meals"]},
    {"Maximum Number of Words Found in Sentences": ["Number of Valid Words in a Sentence"]},
    {"Elements in Array After Removing and Replacing Elements": []},
    {"The Airport With the Most Traffic": []},
    {"Minimum Operations to Make the Array K-Increasing": ["Longest Increasing Subsequence", "Minimum Swaps To Make Sequences Increasing"]},
    {"Number of Smooth Descent Periods of a Stock": ["Subarray Product Less Than K", "Number of Valid Subarrays"]},
    {"Adding Spaces to a String": []},
    {"Find First Palindromic String in the Array": ["Valid Palindrome"]},
    {"Number of Unique Flavors After Sharing K Candies": ["Remove Boxes", "Subarrays with K Different Integers"]},
    {"Maximum Fruits Harvested After at Most K Steps": ["Maximum Performance of a Team"]},
    {"Watering Plants II": ["Watering Plants"]},
    {"Sum of Subarray Ranges": ["Next Greater Element I", "Sum of Subarray Minimums", "Number of Visible People in a Queue", "Count Number of Homogenous Substrings"]},
    {"Rings and Rods": ["Check if All Characters Have Equal Number of Occurrences"]},
    {"Sequentially Ordinal Rank Tracker": ["Find Median from Data Stream", "Kth Largest Element in a Stream", "Finding MK Average"]},
    {"Detonate the Maximum Bombs": ["Minesweeper", "Number of Provinces", "Max Area of Island", "Rotting Oranges"]},
    {"Find Good Days to Rob the Bank": ["Non-decreasing Array", "Longest Mountain in Array", "Find in Mountain Array", "Maximum Ascending Subarray Sum"]},
    {"Find Subsequence of Length K With the Largest Sum": ["Kth Largest Element in an Array", "Maximize Sum Of Array After K Negations", "Sort Integers by The Number of 1 Bits", "Minimum Difference in Sums After Removal of Elements"]},
    {"Subsequence of Size K With the Largest Even Sum": ["Split Array Largest Sum", "Partition Array for Maximum Sum", "Number of Sub-arrays With Odd Sum"]},
    {"Valid Arrangement of Pairs": ["Reconstruct Itinerary", "Find if Path Exists in Graph"]},
    {"Step-By-Step Directions From a Binary Tree Node to Another": ["Path Sum II", "Lowest Common Ancestor of a Binary Tree", "Binary Tree Paths", "Find Distance in a Binary Tree"]},
    {"Delete the Middle Node of a Linked List": ["Remove Nth Node From End of List", "Reorder List", "Remove Linked List Elements", "Middle of the Linked List"]},
    {"Finding 3-Digit Even Numbers": ["Find Numbers with Even Number of Digits"]},
    {"Minimum Cost to Reach City With Discounts": ["Cheapest Flights Within K Stops", "Connecting Cities With Minimum Cost", "Maximum Cost of Trip With K Highways", "Minimum Cost to Reach Destination in Time"]},
    {"Find All People With Secret": ["Reachable Nodes In Subdivided Graph"]},
    {"Removing Minimum and Maximum From Array": ["Maximum Points You Can Obtain from Cards", "Minimum Deletions to Make Character Frequencies Unique"]},
    {"K Radius Subarray Averages": ["Minimum Size Subarray Sum", "Moving Average from Data Stream", "Subarray Sum Equals K", "Maximum Average Subarray I", "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold"]},
    {"Find Target Indices After Sorting Array": ["Find First and Last Position of Element in Sorted Array", "Rank Transform of an Array"]},
    {"Count Fertile Pyramids in a Land": ["Count Square Submatrices with All Ones", "Get Biggest Three Rhombus Sums in a Grid"]},
    {"Minimum Cost Homecoming of a Robot in a Grid": ["Unique Paths", "Minimum Path Sum", "Bomb Enemy", "Count Square Submatrices with All Ones"]},
    {"Minimum Number of Buckets Required to Collect Rainwater from Houses": ["Maximum Number of People That Can Be Caught in Tag", "Brightest Position on Street"]},
    {"Count Common Words With One Occurrence": ["Intersection of Two Arrays", "Uncommon Words from Two Sentences", "Kth Distinct String in an Array"]},
    {"Drop Type 1 Orders for Customers With Type 0 Orders": []},
    {"Substrings That Begin and End With the Same Letter": ["Number of Good Pairs", "Sum of Beauty of All Substrings", "Count Pairs in Two Arrays", "Unique Substrings With Equal Digit Frequency"]},
    {"The Number of Rich Customers": ["The Winner University"]},
    {"Sum of k-Mirror Numbers": ["Strobogrammatic Number II", "Prime Palindrome"]},
    {"Range Frequency Queries": []},
    {"Watering Plants": ["Watering Plants II"]},
    {"Two Furthest Houses With Different Colors": ["Replace Elements with Greatest Element on Right Side", "Maximum Distance Between a Pair of Values", "Maximum Difference Between Increasing Elements"]},
    {"Paths in Maze That Lead to Same Room": ["Number of Connected Components in an Undirected Graph", "Reachable Nodes In Subdivided Graph", "Distance to a Cycle in Undirected Graph", "Find if Path Exists in Graph"]},
    {"Process Restricted Friend Requests": ["Number of Islands II", "Smallest String With Swaps", "Maximum Employees to Be Invited to a Meeting"]},
    {"Decode the Slanted Ciphertext": ["Diagonal Traverse"]},
    {"Reverse Nodes in Even Length Groups": ["Reverse Nodes in k-Group", "Reverse Linked List"]},
    {"Time Needed to Buy Tickets": ["Number of Students Unable to Eat Lunch"]},
    {"The Winner University": ["The Number of Rich Customers"]},
    {"Maximum Number of Tasks You Can Assign": ["Most Profit Assigning Work", "Maximum Running Time of N Computers"]},
    {"Most Beautiful Item for Each Query": ["Closest Room"]},
    {"Walking Robot Simulation II": ["Walking Robot Simulation"]},
    {"Check Whether Two Strings are Almost Equivalent": []},
    {"Number of Equal Count Substrings": ["Longest Substring Without Repeating Characters", "Longest Substring with At Least K Repeating Characters", "Unique Substrings With Equal Digit Frequency"]},
    {"Account Balance": []},
    {"Maximum Path Quality of a Graph": ["Cherry Pickup", "Minimum Cost to Reach Destination in Time"]},
    {"Minimized Maximum of Products Distributed to Any Store": ["Koko Eating Bananas", "Capacity To Ship Packages Within D Days", "Maximum Candies Allocated to K Children", "Find the Smallest Divisor Given a Threshold", "Magnetic Force Between Two Balls", "Minimum Limit of Balls in a Bag", "Minimum Time to Complete Trips"]},
    {"Vowels of All Substrings": ["Number of Substrings Containing All Three Characters"]},
    {"Count Vowel Substrings of a String": ["Number of Matching Subsequences", "Subarrays with K Different Integers", "Number of Substrings With Only 1s", "Longest Substring Of All Vowels in Order"]},
    {"Number of Spaces Cleaning Robot Cleaned": ["Robot Room Cleaner"]},
    {"Check if an Original String Exists Given Two Encoded Strings": ["Valid Word Abbreviation", "Check If Two String Arrays are Equivalent"]},
    {"Minimum Operations to Convert Number": ["Minimum Operations to Reduce X to Zero"]},
    {"Find the Minimum and Maximum Number of Nodes Between Critical Points": []},
    {"Smallest Index With Equal Value": []},
    {"Number of Valid Move Combinations On Chessboard": []},
    {"Plates Between Candles": ["Find First and Last Position of Element in Sorted Array", "Can Make Palindrome from Substring"]},
    {"Two Best Non-Overlapping Events": ["Maximum Profit in Job Scheduling", "Maximum Number of Events That Can Be Attended II"]},
    {"Kth Distinct String in an Array": ["Count Common Words With One Occurrence"]},
    {"Minimum Cost to Separate Sentence Into Rows": ["Sentence Screen Fitting"]},
    {"The Category of Each Member in the Store": []},
    {"Parallel Courses III": ["Course Schedule III", "Parallel Courses", "Single-Threaded CPU", "Process Tasks Using Servers", "Maximum Employees to Be Invited to a Meeting"]},
    {"Count Nodes With the Highest Score": ["Sum of Distances in Tree", "Delete Nodes And Return Forest", "Maximum Product of Splitted Binary Tree"]},
    {"Next Greater Numerically Balanced Number": []},
    {"Number of Valid Words in a Sentence": ["Maximum Number of Words Found in Sentences"]},
    {"Sort Linked List Already Sorted Using Absolute Values": ["Sort List"]},
    {"Second Minimum Time to Reach Destination": ["Network Delay Time", "Find the City With the Smallest Number of Neighbors at a Threshold Distance", "Number of Ways to Arrive at Destination"]},
    {"Count Number of Maximum Bitwise-OR Subsets": ["Subsets"]},
    {"Simple Bank System": ["Design an ATM Machine"]},
    {"Check if Numbers Are Ascending in a Sentence": ["String to Integer (atoi)", "Sorting the Sentence", "Check if All A's Appears Before All B's"]},
    {"Accepted Candidates From the Interviews": []},
    {"Kth Smallest Product of Two Sorted Arrays": ["Find K Pairs with Smallest Sums", "K-diff Pairs in an Array"]},
    {"The Time When the Network Becomes Idle": ["Network Delay Time", "N-ary Tree Level Order Traversal", "Maximum Depth of N-ary Tree"]},
    {"Remove Colored Pieces if Both Neighbors are the Same Color": []},
    {"Minimum Number of Moves to Seat Everyone": []},
    {"Smallest K-Length Subsequence With Occurrences of a Letter": ["Remove Duplicate Letters"]},
    {"Partition Array Into Two Arrays to Minimize Sum Difference": ["Partition Equal Subset Sum", "Split Array With Same Average", "Tallest Billboard", "Last Stone Weight II", "Closest Subsequence Sum"]},
    {"Maximum Alternating Subarray Sum": ["Maximum Alternating Subsequence Sum"]},
    {"Stock Price Fluctuation ": ["Time Based Key-Value Store"]},
    {"Count Subarrays With More Ones Than Zeros": ["Ones and Zeroes", "Longer Contiguous Segments of Ones than Zeros", "All Divisions With the Highest Score of a Binary Array"]},
    {"Two Out of Three": []},
    {"Minimum Operations to Make a Uni-Value Grid": ["Minimum Moves to Equal Array Elements II"]},
    {"Convert 1D Array Into 2D Array": ["Reshape the Matrix"]},
    {"Minimum Moves to Convert String": []},
    {"Stone Game IX": ["Stone Game", "Stone Game II", "Stone Game III", "Stone Game IV", "Stone Game V", "Stone Game VI", "Stone Game VII", "Stone Game VIII", "Stone Game IX"]},
    {"Maximize the Confusion of an Exam": ["Longest Substring with At Most K Distinct Characters", "Longest Repeating Character Replacement", "Max Consecutive Ones III", "Minimum Number of Days to Make m Bouquets"]},
    {"Low-Quality Problems": []},
    {"Number of Pairs of Strings With Concatenation Equal to Target": ["Two Sum"]},
    {"Maximum Number of Ways to Partition an Array": ["Partition Equal Subset Sum", "Partition to K Equal Sum Subsets"]},
    {"Find Missing Observations": ["Number of Dice Rolls With Target Sum", "Dice Roll Simulation"]},
    {"Average Height of Buildings in Each Segment": ["Average Waiting Time", "Describe the Painting", "Amount of New Area Painted Each Day"]},
    {"Check if Word Can Be Placed In Crossword": []},
    {"Maximum Difference Between Increasing Elements": ["Best Time to Buy and Sell Stock", "Two Furthest Houses With Different Colors"]},
    {"The Score of Students Solving Math Expression": ["Basic Calculator", "Different Ways to Add Parentheses"]},
    {"Brightest Position on Street": ["Minimum Number of Buckets Required to Collect Rainwater from Houses", "Count Positions on Street With Required Brightness"]},
    {"Number of Accounts That Did Not Stream": []},
    {"Longest Subsequence Repeated k Times": ["Longest Substring with At Least K Repeating Characters"]},
    {"Grid Game": []},
    {"Detect Squares": []},
    {"The Number of Seniors and Juniors to Join the Company II": ["Last Person to Fit in the Bus", "The Number of Seniors and Juniors to Join the Company"]},
    {"Minimum Number of Operations to Make Array Continuous": ["Longest Repeating Character Replacement", "Continuous Subarray Sum", "Moving Stones Until Consecutive II", "Minimum One Bit Operations to Make Integers Zero", "Minimum Adjacent Swaps for K Consecutive Ones"]},
    {"Sum of Beauty in the Array": ["Best Time to Buy and Sell Stock", "Partition Array into Disjoint Intervals"]},
    {"Find Original Array From Doubled Array": ["Array of Doubled Pairs", "Recover the Original Array"]},
    {"Final Value of Variable After Performing Operations": []},
    {"Count Number of Pairs With Absolute Difference K": ["Two Sum", "K-diff Pairs in an Array", "Finding Pairs With a Certain Sum", "Count Equal and Divisible Pairs in an Array"]},
    {"Maximum Earnings From Taxi": ["Maximum Profit in Job Scheduling", "Maximum Number of Events That Can Be Attended", "Maximum Number of Events That Can Be Attended II"]},
    {"Subtree Removal Game with Fibonacci Tree": ["Game of Nim"]},
    {"Smallest Missing Genetic Value in Each Subtree": []},
    {"The Number of Seniors and Juniors to Join the Company": ["Last Person to Fit in the Bus", "The Number of Seniors and Juniors to Join the Company II"]},
    {"Number of Pairs of Interchangeable Rectangles": ["Number of Good Pairs", "Count Nice Pairs in an Array", "Replace Non-Coprime Numbers in Array"]},
    {"GCD Sort of an Array": ["Rank Transform of a Matrix"]},
    {"Reverse Prefix of Word": []},
    {"Smallest Greater Multiple Made of Two Digits": []},
    {"Maximum Product of the Length of Two Palindromic Subsequences": ["Valid Palindrome", "Longest Palindromic Subsequence", "Maximum Product of the Length of Two Palindromic Substrings", "Maximum Points in an Archery Competition"]},
    {"The Number of Weak Characters in the Game": ["Russian Doll Envelopes", "Maximum Height by Stacking Cuboids "]},
    {"Count Special Quadruplets": ["4Sum", "Increasing Triplet Subsequence", "Count Good Triplets"]},
    {"Count the Number of Experiments": []},
    {"Find the Middle Index in Array": ["Find Pivot Index", "Partition Array Into Three Parts With Equal Sum", "Maximum Sum Score of Array"]},
    {"Operations on Tree": ["Throne Inheritance"]},
    {"Find All Groups of Farmland": ["Number of Islands", "Count Sub Islands"]},
    {"The Number of Good Subsets": ["Smallest Sufficient Team", "Number of Ways to Wear Different Hats to Each Other"]},
    {"First Day Where You Have Been in All the Rooms": []},
    {"Maximum Number of People That Can Be Caught in Tag": ["Minimum Number of Buckets Required to Collect Rainwater from Houses"]},
    {"Find Array Given Subset Sums": ["Subsets", "Subsets II", "Recover the Original Array"]},
    {"Minimum Number of Work Sessions to Finish the Tasks": ["Smallest Sufficient Team", "Find Minimum Time to Finish All Jobs"]},
    {"Find the Kth Largest Integer in the Array": ["Kth Largest Element in an Array"]},
    {"Widest Pair of Indices With Equal Range Sum": []},
    {"Minimum Difference Between Highest and Lowest of K Scores": ["Array Partition I"]},
    {"Find Cutoff Score for Each School": []},
    {"Number of Unique Good Subsequences": ["Distinct Subsequences", "Distinct Subsequences II"]},
    {"Minimum Time to Type Word Using Special Typewriter": ["Minimum Distance to Type a Word Using Two Fingers"]},
    {"Minimize the Difference Between Target and Chosen Elements": ["Partition Equal Subset Sum", "Closest Subsequence Sum", "Maximum Number of Points with Cost"]},
    {"Find Greatest Common Divisor of Array": ["Greatest Common Divisor of Strings", "Number of Different Subsequences GCDs", "Three Divisors"]},
    {"Employees Whose Manager Left the Company": []},
    {"Maximum Matrix Sum": []},
    {"Number of Ways to Arrive at Destination": ["All Paths From Source to Target", "Path with Maximum Probability", "Second Minimum Time to Reach Destination"]},
    {"Find Unique Binary String": ["Missing Number", "Find All Numbers Disappeared in an Array", "Random Pick with Blacklist"]},
    {"Number of Ways to Separate Numbers": ["Decode Ways", "Decode Ways II", "Restore The Array"]},
    {"Array With Elements Not Equal to Average of Neighbors": ["Wiggle Sort", "Wiggle Sort II"]},
    {"Last Day Where You Can Still Cross": ["Bricks Falling When Hit"]},
    {"First and Last Call On the Same Day": []},
    {"Find if Path Exists in Graph": ["Valid Arrangement of Pairs", "Paths in Maze That Lead to Same Room"]},
    {"Count Nodes Equal to Sum of Descendants": ["Most Frequent Subtree Sum", "Maximum Average Subtree"]},
    {"Minimum Non-Zero Product of the Array Elements": []},
    {"Number of Strings That Appear as Substrings in Word": []},
    {"Binary Searchable Numbers in an Unsorted Array": []},
    {"Employees With Missing Information": []},
    {"Minimum Total Space Wasted With K Resizing Operations": []},
    {"Find the Longest Valid Obstacle Course at Each Position": ["Longest Increasing Subsequence"]},
    {"Maximum Product of the Length of Two Palindromic Substrings": ["Maximum Product of the Length of Two Palindromic Subsequences"]},
    {"Check if Move is Legal": []},
    {"Minimum Number of Swaps to Make the String Balanced": ["Remove Invalid Parentheses", "Minimum Add to Make Parentheses Valid", "Minimum Remove to Make Valid Parentheses", "Minimum Insertions to Balance a Parentheses String"]},
    {"Remove Stones to Minimize the Total": ["Minimum Operations to Halve Array Sum"]},
    {"Check If String Is a Prefix of Array": []},
    {"Minimum Garden Perimeter to Collect Enough Apples": []},
    {"Three Divisors": ["Find Greatest Common Divisor of Array"]},
    {"All the Pairs With the Maximum Number of Common Followers": []},
    {"Count Number of Special Subsequences": []},
    {"Maximum of Minimum Values in All Subarrays": []},
    {"Minimum Time For K Virus Variants to Spread": []},
    {"Delete Characters to Make Fancy String": []},
    {"Maximum Number of Weeks for Which You Can Work": ["Task Scheduler"]},
    {"The Number of the Smallest Unoccupied Chair": []},
    {"Delete Duplicate Folders in System": ["Find Duplicate File in System", "Find Duplicate Subtrees"]},
    {"Describe the Painting": ["Average Height of Buildings in Each Segment", "Amount of New Area Painted Each Day"]},
    {"Sum of Digits of String After Convert": ["Happy Number", "Add Digits", "Count Integers With Even Digit Sum"]},
    {"Number of Visible People in a Queue": ["Buildings With an Ocean View", "Sum of Subarray Ranges"]},
    {"Maximum Compatibility Score Sum": []},
    {"Strong Friendship": ["Page Recommendations", "Page Recommendations II", "Leetcodify Friends Recommendations"]},
    {"Largest Number After Mutating Substring": []},
    {"Maximum Number of Words You Can Type": []},
    {"Check if All Characters Have Equal Number of Occurrences": ["Rings and Rods"]},
    {"Add Minimum Number of Rungs": ["Cutting Ribbons"]},
    {"Users That Actively Request Confirmation Messages": []},
    {"Confirmation Rate": []},
    {"Maximum Genetic Difference Query": ["Maximum XOR With an Element From Array"]},
    {"Maximum Number of Points with Cost": ["Minimum Path Sum", "Minimize the Difference Between Target and Chosen Elements"]},
    {"Longest Common Subsequence Between Sorted Arrays": ["Merge Two Sorted Lists"]},
    {"Painting a Grid With Three Different Colors": ["Number of Ways to Paint N \u00d7 3 Grid"]},
    {"Merge BSTs to Create Single BST": []},
    {"Check if String Is Decomposable Into Value-Equal Substrings": []},
    {"Sum Game": []},
    {"Unique Length-3 Palindromic Subsequences": []},
    {"Concatenation of Array": []},
    {"Minimum Cost to Reach Destination in Time": ["Maximum Cost of Trip With K Highways", "Maximum Path Quality of a Graph", "Minimum Cost to Reach City With Discounts"]},
    {"Nearest Exit from Entrance in Maze": []},
    {"Count Good Numbers": []},
    {"Eliminate Maximum Number of Monsters": ["Minimum Health to Beat Game"]},
    {"Kth Smallest Subarray Sum": []},
    {"Erect the Fence II": ["Erect the Fence"]},
    {"Count Square Sum Triples": []},
    {"Build Array from Permutation": []},
    {"Leetcodify Similar Friends": ["Leetcodify Friends Recommendations"]},
    {"Longest Common Subpath": ["Reconstruct Itinerary", "Maximum Length of Repeated Subarray"]},
    {"Number of Wonderful Substrings": []},
    {"Maximum Alternating Subsequence Sum": ["Maximum Alternating Subarray Sum"]},
    {"Count Ways to Build Rooms in an Ant Colony": []},
    {"Remove All Occurrences of a Substring": []},
    {"Maximum Product Difference Between Two Pairs": []},
    {"Leetcodify Friends Recommendations": ["Leetcodify Similar Friends", "Strong Friendship"]},
    {"Design Movie Rental System": []},
    {"Cyclically Rotating a Grid": []},
    {"The Number of Full Rounds You Have Played": []},
    {"Largest Odd Number in String": []},
    {"Game of Nim": ["Subtree Removal Game with Fibonacci Tree"]},
    {"Count Sub Islands": ["Number of Islands", "Number of Distinct Islands", "Find All Groups of Farmland"]},
    {"Count Salary Categories": ["Create a Session Bar Chart"]},
    {"Remove One Element to Make the Array Strictly Increasing": []},
    {"Depth of BST Given Insertion Order": []},
    {"Minimum Absolute Difference Queries": []},
    {"The Earliest and Latest Rounds Where Players Compete": []},
    {"Merge Triplets to Form Target Triplet": []},
    {"Find a Peak Element II": ["Find Peak Element"]},
    {"Minimum Cost to Change the Final Value of Expression": []},
    {"Maximum Number of Removable Characters": ["Maximum Candies Allocated to K Children"]},
    {"Redistribute Characters to Make All Strings Equal": []},
    {"Largest Magic Square": ["Magic Squares In Grid"]},
    {"Find the Student that Will Replace the Chalk": []},
    {"Cutting Ribbons": ["Capacity To Ship Packages Within D Days", "Add Minimum Number of Rungs"]},
    {"Check if All the Integers in a Range Are Covered": []},
    {"Minimum Space Wasted From Packaging": []},
    {"Page Recommendations II": ["Page Recommendations", "Strong Friendship"]},
    {"Determine Whether Matrix Can Be Obtained By Rotation": ["Rotate Image"]},
    {"Reduction Operations to Make the Array Elements Equal": []},
    {"Minimum Number of Flips to Make the Binary String Alternating": ["Minimum Operations to Make the Array Alternating"]},
    {"The Latest Login in 2020": []},
    {"Maximum Value after Insertion": []},
    {"Egg Drop With 2 Eggs and N Floors": ["Super Egg Drop"]},
    {"Check if Word Equals Summation of Two Words": []},
    {"Get Biggest Three Rhombus Sums in a Grid": ["Count Fertile Pyramids in a Land"]},
    {"Count Pairs in Two Arrays": ["Max Value of Equation", "Substrings That Begin and End With the Same Letter"]},
    {"Minimum XOR Sum of Two Arrays": ["Choose Numbers From Two Arrays in Range", "Maximum AND Sum of Array"]},
    {"Minimum Skips to Arrive at Meeting On Time": ["Minimum Speed to Arrive on Time", "Minimum Time to Finish the Race"]},
    {"Process Tasks Using Servers": ["Parallel Courses III"]},
    {"Calculate Special Bonus": []},
    {"Minimize Product Sum of Two Arrays": ["Choose Numbers From Two Arrays in Range"]},
    {"Minimize Maximum Pair Sum in Array": []},
    {"Group Employees of the Same Salary": []},
    {"Minimum Speed to Arrive on Time": ["Maximum Candies Allocated to K Children", "Minimum Skips to Arrive at Meeting On Time", "Minimum Time to Complete Trips"]},
    {"Jump Game VII": ["Jump Game II", "Jump Game", "Jump Game III", "Jump Game IV", "Jump Game V", "Jump Game VI", "Jump Game VII"]},
    {"Stone Game VIII": ["Stone Game", "Stone Game II", "Stone Game III", "Stone Game IV", "Stone Game V", "Stone Game VI", "Stone Game VII", "Stone Game VIII", "Stone Game IX"]},
    {"Substrings of Size Three with Distinct Characters": []},
    {"Minimum Number of Swaps to Make the Binary String Alternating": []},
    {"Orders With Maximum Quantity Above Average": []},
    {"Sum of Floored Pairs": []},
    {"Longer Contiguous Segments of Ones than Zeros": ["Max Consecutive Ones", "Count Subarrays With More Ones Than Zeros", "Check if Binary String Has at Most One Segment of Ones"]},
    {"Number of Ways to Rearrange Sticks With K Sticks Visible": []},
    {"Finding Pairs With a Certain Sum": ["Count Number of Pairs With Absolute Difference K"]},
    {"Product of Two Run-Length Encoded Arrays": []},
    {"Sum of All Subset XOR Totals": []},
    {"Sorting the Sentence": ["Check if Numbers Are Ascending in a Sentence"]},
    {"Longest Word With All Prefixes": ["Longest Word in Dictionary"]},
    {"Maximum Population Year": []},
    {"Maximum Distance Between a Pair of Values": ["Two Furthest Houses With Different Colors"]},
    {"Largest Color Value in a Directed Graph": []},
    {"Rotating the Box": []},
    {"Maximum Subarray Min-Product": []},
    {"Incremental Memory Leak": []},
    {"Convert Date Format": []},
    {"Minimum Interval to Include Each Query": ["Number of Flowers in Full Bloom"]},
    {"Minimum Distance to the Target Element": []},
    {"Minimum Adjacent Swaps to Reach the Kth Smallest Number": ["Next Permutation"]},
    {"Closest Room": ["Most Beautiful Item for Each Query"]},
    {"Maximum Element After Decreasing and Rearranging": []},
    {"Distinct Numbers in Each Subarray": []},
    {"Splitting a String Into Descending Consecutive Values": []},
    {"Longest Substring Of All Vowels in Order": ["Count Vowel Substrings of a String"]},
    {"Next Palindrome Using Same Digits": ["Next Greater Element III", "Find the Closest Palindrome"]},
    {"League Statistics": []},
    {"Suspicious Bank Accounts": []},
    {"Maximum Building Height": []},
    {"Replace All Digits with Characters": ["Shifting Letters"]},
    {"Frequency of the Most Frequent Element": ["Find All Lonely Numbers in the Array"]},
    {"Seat Reservation Manager": ["Design Phone Directory"]},
    {"Minimum Number of Operations to Make String Sorted": []},
    {"Maximum Ice Cream Bars": []},
    {"Sum of Digits in Base K": []},
    {"Check if the Sentence Is Pangram": []},
    {"Single-Threaded CPU": ["Parallel Courses III"]},
    {"Maximum Transaction Each Day": []},
    {"Remove Duplicates From an Unsorted Linked List": ["Remove Duplicates from Sorted List II", "Remove Duplicates from Sorted List"]},
    {"Find XOR Sum of All Pairs Bitwise AND": []},
    {"Queries on Number of Points Inside a Circle": ["Count Lattice Points Inside a Circle", "Count Number of Rectangles Containing Each Point"]},
    {"Minimum Sideway Jumps": ["Frog Jump"]},
    {"Maximum XOR for Each Query": []},
    {"Faulty Sensor": []},
    {"Minimum Operations to Make the Array Increasing": ["Maximum Product After K Increments"]},
    {"Find the Winner of the Circular Game": []},
    {"Sign of the Product of an Array": []},
    {"Finding MK Average": ["Find Median from Data Stream", "Kth Largest Element in a Stream", "Sequentially Ordinal Rank Tracker"]},
    {"Minimum Absolute Sum Difference": []},
    {"Maximum Number of Accepted Invitations": []},
    {"Find Customers With Positive Revenue this Year": []},
    {"Finding the Users Active Minutes": []},
    {"Maximum Number of Groups Getting Fresh Donuts": []},
    {"Number of Different Subsequences GCDs": ["Find Greatest Common Divisor of Array"]},
    {"Count Nice Pairs in an Array": ["Number of Pairs of Interchangeable Rectangles"]},
    {"Truncate Sentence": []},
    {"Maximize Number of Nice Divisors": ["Integer Break"]},
    {"Sentence Similarity III": []},
    {"Find Interview Candidates": []},
    {"Minimum Number of Operations to Reinitialize a Permutation": []},
    {"Evaluate the Bracket Pairs of a String": []},
    {"Determine Color of a Chessboard Square": []},
    {"Minimum Path Cost in a Hidden Grid": ["Robot Room Cleaner", "Shortest Path in a Hidden Grid"]},
    {"Ad-Free Sessions": []},
    {"Count Pairs With XOR in a Range": []},
    {"Number of Orders in the Backlog": []},
    {"Maximize Score After N Operations": []},
    {"Number of Different Integers in a String": []},
    {"Maximum Number of Consecutive Values You Can Make": ["Patching Array"]},
    {"Implement Trie II (Prefix Tree)": ["Implement Trie (Prefix Tree)", "Encrypt and Decrypt Strings"]},
    {"Maximum Ascending Subarray Sum": ["Find Good Days to Rob the Bank"]},
    {"Maximum Value at a Given Index in a Bounded Array": []},
    {"Count Pairs of Equal Substrings With Minimum Difference": []},
    {"Second Largest Digit in a String": []},
    {"Check if One String Swap Can Make Strings Equal": ["Buddy Strings"]},
    {"Find Center of Star Graph": []},
    {"Maximum Average Pass Ratio": []},
    {"Rearrange Products Table": ["Product's Price for Each Store", "Dynamic Unpivoting of a Table"]},
    {"Design Authentication Manager": []},
    {"Maximum Score of a Good Subarray": ["Largest Rectangle in Histogram"]},
    {"Make the XOR of All Segments Equal to Zero": []},
    {"Check if Binary String Has at Most One Segment of Ones": ["Longer Contiguous Segments of Ones than Zeros"]},
    {"Primary Department for Each Employee": []},
    {"Count Pairs Of Nodes": []},
    {"Maximize the Beauty of the Garden": []},
    {"Grand Slam Titles": []},
    {"Minimum Elements to Add to Form a Given Sum": []},
    {"Number of Restricted Paths From First to Last Node": ["All Ancestors of a Node in a Directed Acyclic Graph"]},
    {"Shortest Path in a Hidden Grid": ["Robot Room Cleaner", "Minimum Path Cost in a Hidden Grid"]},
    {"Equal Sum Arrays With Minimum Number of Operations": ["Number of Dice Rolls With Target Sum"]},
    {"Check if Number is a Sum of Powers of Three": ["Power of Three"]},
    {"Find Nearest Point That Has the Same X or Y Coordinate": ["K Closest Points to Origin"]},
    {"Product's Price for Each Store": ["Rearrange Products Table", "Dynamic Pivoting of a Table"]},
    {"Closest Dessert Cost": []},
    {"Sum of Beauty of All Substrings": ["Substrings That Begin and End With the Same Letter"]},
    {"Car Fleet II": ["Car Fleet", "Count Collisions on a Road"]},
    {"Sort Features by Popularity": ["Top K Frequent Elements", "Top K Frequent Words"]},
    {"Maximize Palindrome Length From Subsequences": ["Longest Palindromic Subsequence"]},
    {"Minimum Number of Operations to Move All Balls to Each Box": ["Minimum Cost to Move Chips to The Same Position"]},
    {"Maximum Score from Performing Multiplication Operations": ["Maximum Points You Can Obtain from Cards", "Stone Game VII"]},
    {"Tree of Coprimes": []},
    {"Merge Strings Alternately": ["Zigzag Iterator"]},
    {"Find the Subtasks That Did Not Execute": []},
    {"Count Items Matching a Rule": []},
    {"Minimum Changes To Make Alternating Binary String": []},
    {"Longest Nice Substring": []},
    {"Form Array by Concatenating Subarrays of Another Array": []},
    {"Map of Highest Peak": []},
    {"Minimum Limit of Balls in a Bag": ["Maximum Candies Allocated to K Children", "Minimized Maximum of Products Distributed to Any Store"]},
    {"Count Number of Homogenous Substrings": ["Consecutive Characters", "Number of Substrings With Only 1s", "Sum of Subarray Ranges"]},
    {"Minimum Degree of a Connected Trio in a Graph": []},
    {"Buildings With an Ocean View": ["Number of Visible People in a Queue"]},
    {"Maximum Number of Events That Can Be Attended II": ["Maximum Number of Events That Can Be Attended", "Maximum Earnings From Taxi", "Two Best Non-Overlapping Events"]},
    {"Minimum Length of String After Deleting Similar Ends": []},
    {"Maximum Score From Removing Stones": []},
    {"Largest Merge Of Two Strings": []},
    {"Check if Array Is Sorted and Rotated": ["Check if All A's Appears Before All B's"]},
    {"Recyclable and Low Fat Products": []},
    {"Closest Subsequence Sum": ["Minimize the Difference Between Target and Chosen Elements", "Partition Array Into Two Arrays to Minimize Sum Difference"]},
    {"Design Most Recently Used Queue": ["LRU Cache"]},
    {"Palindrome Partitioning IV": ["Palindrome Partitioning", "Palindrome Partitioning II", "Palindrome Partitioning III"]},
    {"Sum of Unique Elements": []},
    {"Maximum Absolute Sum of Any Subarray": ["Maximum Subarray"]},
    {"Maximum Number of Balls in a Box": []},
    {"Can You Eat Your Favorite Candy on Your Favorite Day?": []},
    {"Restore the Array From Adjacent Pairs": []},
    {"Leetflex Banned Accounts": []},
    {"Maximum Subarray Sum After One Operation": ["Maximum Subarray"]},
    {"Change Minimum Characters to Satisfy One of Three Conditions": []},
    {"Find Distance in a Binary Tree": ["Step-By-Step Directions From a Binary Tree Node to Another"]},
    {"Count Ways to Make Array With Product": []},
    {"Find Total Time Spent by Each Employee": []},
    {"Building Boxes": []},
    {"Latest Time by Replacing Hidden Digits": []},
    {"Find Kth Largest XOR Coordinate Value": []},
    {"Decode XORed Permutation": []},
    {"Cat and Mouse II": ["Escape The Ghosts", "Cat and Mouse"]},
    {"Find the Highest Altitude": []},
    {"Find Followers Count": []},
    {"Largest Submatrix With Rearrangements": ["Max Area of Island"]},
    {"Minimum Number of People to Teach": []},
    {"The Number of Employees Which Report to Each Employee": []},
    {"Shortest Path to Get Food": ["01 Matrix", "Shortest Path in a Grid with Obstacles Elimination"]},
    {"Tuple with Same Product": []},
    {"Checking Existence of Edge Length Limited Paths II": ["Checking Existence of Edge Length Limited Paths"]},
    {"Decode XORed Array": []},
    {"Number Of Rectangles That Can Form The Largest Square": []},
    {"Construct the Lexicographically Largest Valid Sequence": []},
    {"Find Minimum Time to Finish All Jobs": ["Minimum Number of Work Sessions to Finish the Tasks"]},
    {"Number Of Ways To Reconstruct A Tree": ["Create Binary Tree From Descriptions"]},
    {"Swapping Nodes in a Linked List": ["Remove Nth Node From End of List", "Swap Nodes in Pairs", "Reverse Nodes in k-Group"]},
    {"Minimize Hamming Distance After Swap Operations": ["Smallest String With Swaps"]},
    {"Maximum Score From Removing Substrings": ["Count Words Obtained After Adding a Letter"]},
    {"Calculate Money in Leetcode Bank": []},
    {"Ways to Split Array Into Three Subarrays": ["Number of Ways to Divide a Long Corridor"]},
    {"Minimum Operations to Make a Subsequence": []},
    {"Maximum Units on a Truck": []},
    {"Count Good Meals": ["Two Sum", "Max Number of K-Sum Pairs", "Find All Possible Recipes from Given Supplies"]},
    {"Count Apples and Oranges": []},
    {"Sum Of Special Evenly-Spaced Elements In Array": []},
    {"Maximum Binary String After Change": []},
    {"Minimum Adjacent Swaps for K Consecutive Ones": ["Minimum Swaps to Group All 1's Together", "Minimum Number of Operations to Make Array Continuous"]},
    {"Biggest Window Between Visits": ["Users With Two Purchases Within Seven Days"]},
    {"Maximum XOR With an Element From Array": ["Maximum XOR of Two Numbers in an Array", "Maximum Genetic Difference Query"]},
    {"Maximum Number of Eaten Apples": []},
    {"Determine if String Halves Are Alike": []},
    {"Where Will the Ball Fall": []},
    {"Largest Subarray Length K": []},
    {"Number of Calls Between Two Persons": []},
    {"Average Waiting Time": ["Average Height of Buildings in Each Segment"]},
    {"Number of Distinct Substrings in a String": []},
    {"Checking Existence of Edge Length Limited Paths": ["Checking Existence of Edge Length Limited Paths II"]},
    {"Jump Game VI": ["Sliding Window Maximum", "Jump Game VII"]},
    {"Number of Students Unable to Eat Lunch": ["Time Needed to Buy Tickets"]},
    {"Reformat Phone Number": []},
    {"Maximum Erasure Value": ["Longest Substring Without Repeating Characters"]},
    {"Daily Leads and Partners": []},
    {"Count of Matches in Tournament": []},
    {"Partitioning Into Minimum Number Of Deci-Binary Numbers": []},
    {"Count Ways to Distribute Candies": []},
    {"Maximum Height by Stacking Cuboids ": ["The Number of Weak Characters in the Game"]},
    {"Stone Game VII": ["Stone Game", "Stone Game II", "Stone Game III", "Stone Game IV", "Stone Game V", "Stone Game VI", "Maximum Score from Performing Multiplication Operations", "Stone Game VIII", "Stone Game IX"]},
    {"Delivering Boxes from Storage to Ports": []},
    {"Stone Game VI": ["Stone Game", "Stone Game II", "Stone Game III", "Stone Game IV", "Stone Game V", "Stone Game VII", "Stone Game VIII", "Stone Game IX"]},
    {"Invalid Tweets": []},
    {"Concatenation of Consecutive Binary Numbers": []},
    {"Count the Number of Consistent Strings": []},
    {"Goal Parser Interpretation": []},
    {"Longest Palindromic Subsequence II": ["Longest Palindromic Subsequence"]},
    {"Minimum Incompatibility": []},
    {"Sum of Absolute Differences in a Sorted Array": []},
    {"Max Number of K-Sum Pairs": ["Two Sum", "Count Good Meals"]},
    {"Minimize Deviation in Array": []},
    {"Product's Worth Over Invoices": []},
    {"Lowest Common Ancestor of a Binary Tree IV": ["Lowest Common Ancestor of a Binary Search Tree", "Lowest Common Ancestor of a Binary Tree", "Lowest Common Ancestor of Deepest Leaves", "Lowest Common Ancestor of a Binary Tree II", "Lowest Common Ancestor of a Binary Tree III", "Lowest Common Ancestor of a Binary Tree IV"]},
    {"Richest Customer Wealth": []},
    {"Minimum Number of Removals to Make Mountain Array": ["Longest Increasing Subsequence", "Longest Mountain in Array", "Peak Index in a Mountain Array", "Valid Mountain Array", "Find in Mountain Array"]},
    {"Design Front Middle Back Queue": ["Design Circular Deque", "Design Circular Queue"]},
    {"Minimum Moves to Make Array Complementary": []},
    {"Find the Most Competitive Subsequence": ["Remove K Digits", "Smallest Subsequence of Distinct Characters"]},
    {"Smallest String With A Given Numeric Value": []},
    {"Fix Names in a Table": []},
    {"Check If Two String Arrays are Equivalent": ["Check if an Original String Exists Given Two Encoded Strings"]},
    {"Merge In Between Linked Lists": []},
    {"Ways to Make a Fair Array": []},
    {"Change the Root of a Binary Tree": []},
    {"Minimum Initial Energy to Finish Tasks": []},
    {"Maximum Repeating Substring": ["Detect Pattern of Length M Repeated K or More Times"]},
    {"Correct a Binary Tree": ["Flatten Binary Tree to Linked List", "Flatten a Multilevel Doubly Linked List"]},
    {"Maximize Grid Happiness": []},
    {"Determine if Two Strings Are Close": ["Buddy Strings", "Minimum Swaps to Make Strings Equal", "Minimum Number of Steps to Make Two Strings Anagram"]},
    {"Design an Ordered Stream": []},
    {"Minimum Jumps to Reach Home": []},
    {"Distribute Repeating Integers": []},
    {"Average Time of Process per Machine": []},
    {"Minimum Operations to Reduce X to Zero": ["Minimum Size Subarray Sum", "Subarray Sum Equals K", "Minimum Operations to Convert Number", "Removing Minimum Number of Magic Beans"]},
    {"Create Sorted Array through Instructions": ["Count Good Triplets in an Array", "Longest Substring of One Repeating Character"]},
    {"Hopper Company Queries III": ["Trips and Users", "Hopper Company Queries I", "Hopper Company Queries II", "Number of Times a Driver Was a Passenger"]},
    {"Lowest Common Ancestor of a Binary Tree III": ["Lowest Common Ancestor of a Binary Search Tree", "Lowest Common Ancestor of a Binary Tree", "Lowest Common Ancestor of a Binary Tree II", "Lowest Common Ancestor of a Binary Tree IV"]},
    {"Get Maximum in Generated Array": []},
    {"Sell Diminishing-Valued Colored Balls": ["Maximum Running Time of N Computers"]},
    {"Defuse the Bomb": []},
    {"Minimum Deletions to Make String Balanced": ["Check if All A's Appears Before All B's"]},
    {"Minimum Deletions to Make Character Frequencies Unique": ["Minimum Deletions to Make Array Beautiful", "Removing Minimum and Maximum From Array"]},
    {"Count Substrings That Differ by One Character": ["Count Words Obtained After Adding a Letter"]},
    {"Check Array Formation Through Concatenation": []},
    {"Count Sorted Vowel Strings": []},
    {"Hopper Company Queries II": ["Trips and Users", "Hopper Company Queries I", "Hopper Company Queries III", "Number of Times a Driver Was a Passenger"]},
    {"Lowest Common Ancestor of a Binary Tree II": ["Lowest Common Ancestor of a Binary Search Tree", "Lowest Common Ancestor of a Binary Tree", "Lowest Common Ancestor of a Binary Tree III", "Lowest Common Ancestor of a Binary Tree IV"]},
    {"Furthest Building You Can Reach": []},
    {"Kth Smallest Instructions": []},
    {"Number of Ways to Form a Target String Given a Dictionary": []},
    {"Sort Array by Increasing Frequency": ["Sort Characters By Frequency", "Divide Array Into Equal Pairs", "Most Frequent Number Following Key In an Array"]},
    {"Rank Transform of a Matrix": ["Rank Transform of an Array", "GCD Sort of an Array"]},
    {"Percentage of Users Attended a Contest": ["Queries Quality and Percentage"]},
    {"Path With Minimum Effort": ["Swim in Rising Water", "Path With Maximum Minimum Value"]},
    {"Add Two Polynomials Represented as Linked Lists": ["Add Two Numbers", "Merge Two Sorted Lists", "Add Two Numbers II"]},
    {"Hopper Company Queries I": ["Trips and Users", "Hopper Company Queries II", "Hopper Company Queries III", "Number of Times a Driver Was a Passenger"]},
    {"Arithmetic Subarrays": ["Arithmetic Slices", "Can Make Arithmetic Progression From Sequence"]},
    {"Widest Vertical Area Between Two Points Containing No Points": []},
    {"Design an Expression Tree With Evaluate Function": []},
    {"Largest Substring Between Two Equal Characters": []},
    {"Best Team With No Conflicts": []},
    {"Lexicographically Smallest String After Applying Operations": []},
    {"All Valid Triplets That Can Represent a Country": []},
    {"Slowest Key": []},
    {"Fancy Sequence": []},
    {"Graph Connectivity With Threshold": []},
    {"Number of Sets of K Non-Overlapping Line Segments": []},
    {"Split Two Strings to Make Palindrome": []},
    {"Coordinate With Maximum Network Quality": []},
    {"Maximal Network Rank": []},
    {"Maximum Nesting Depth of the Parentheses": ["Maximum Nesting Depth of Two Valid Parentheses Strings"]},
    {"Mean of Array After Removing Some Elements": []},
    {"Count Subtrees With Max Distance Between Cities": ["Tree Diameter"]},
    {"Maximum Font to Fit a Sentence in a Screen": []},
    {"Minimum One Bit Operations to Make Integers Zero": ["Minimum Number of Operations to Make Array Continuous"]},
    {"Sellers With No Sales": ["Customer Who Visited but Did Not Make Any Transactions"]},
    {"Special Array With X Elements Greater Than or Equal X": []},
    {"Even Odd Tree": []},
    {"Find the Missing IDs": ["Report Contiguous Dates", "Find the Start and End Number of Continuous Ranges", "Number of Transactions per Visit"]},
    {"Find Servers That Handled Most Number of Requests": []},
    {"Check If Two Expression Trees are Equivalent": ["Build Binary Expression Tree From Infix Expression"]},
    {"Maximum Number of Visible Points": []},
    {"Design Parking System": []},
    {"Find Valid Matrix Given Row and Column Sums": ["Reconstruct a 2-Row Binary Matrix"]},
    {"Maximum Number of Achievable Transfer Requests": []},
    {"Crawler Log Folder": ["Baseball Game", "Backspace String Compare"]},
    {"Alert Using Same Key-Card Three or More Times in a One Hour Period": []},
    {"Throne Inheritance": ["Operations on Tree"]},
    {"Find Nearest Right Node in Binary Tree": []},
    {"Maximum Profit of Operating a Centennial Wheel": []},
    {"The Most Frequently Ordered Products for Each Customer": ["The Most Recent Orders for Each Product"]},
    {"Make Sum Divisible by P": ["Subarray Sums Divisible by K"]},
    {"Minimum Cost to Connect Two Groups of Points": []},
    {"Split a String Into the Max Number of Unique Substrings": []},
    {"Strange Printer II": ["Strange Printer"]},
    {"Maximum Non Negative Product in a Matrix": []},
    {"Rearrange Spaces Between Words": ["Text Justification"]},
    {"Build Binary Expression Tree From Infix Expression": ["Basic Calculator III", "Check If Two Expression Trees are Equivalent"]},
    {"Sum of All Odd Length Subarrays": []},
    {"Min Cost to Connect All Points": ["Minimum Number of Lines to Cover Points"]},
    {"Bank Account Summary II": []},
    {"Count Unhappy Friends": []},
    {"Check If String Is Transformable With Substring Sort Operations": []},
    {"Special Positions in a Binary Matrix": []},
    {"Maximum Sum Obtained of Any Permutation": []},
    {"Binary Search Tree Iterator II": ["Binary Search Tree Iterator"]},
    {"Shortest Subarray to be Removed to Make Array Sorted": []},
    {"Number of Ways Where Square of Number Is Equal to Product of Two Numbers": []},
    {"Put Boxes Into the Warehouse II": ["Put Boxes Into the Warehouse I"]},
    {"Count All Possible Routes": []},
    {"Replace All ?'s to Avoid Consecutive Repeating Characters": []},
    {"Remove Max Number of Edges to Keep Graph Fully Traversable": []},
    {"Minimum Time to Make Rope Colorful": []},
    {"Customer Who Visited but Did Not Make Any Transactions": ["Sellers With No Sales"]},
    {"Dot Product of Two Sparse Vectors": []},
    {"Maximum Length of Subarray With Positive Product": []},
    {"Matrix Diagonal Sum": ["Check if Every Row and Column Contains All Numbers"]},
    {"Number of Ways to Split a String": ["Split Array with Equal Sum"]},
    {"Warehouse Manager": []},
    {"Number of Ways to Reorder Array to Get Same BST": []},
    {"Detect Pattern of Length M Repeated K or More Times": ["Maximum Repeating Substring"]},
    {"Minimum Number of Days to Disconnect Island": []},
    {"Unique Orders and Customers Per Month": []},
    {"Maximum Number of Coins You Can Get": []},
    {"Minimum Numbers of Function Calls to Make Target Array": []},
    {"Detect Cycles in 2D Grid": []},
    {"Stone Game V": ["Stone Game", "Stone Game II", "Stone Game III", "Stone Game IV", "Stone Game VI", "Stone Game VII", "Stone Game VIII", "Stone Game IX"]},
    {"Most Visited Sector in  a Circular Track": []},
    {"Find Latest Group of Size M": []},
    {"Put Boxes Into the Warehouse I": ["Put Boxes Into the Warehouse II"]},
    {"Minimum Number of Days to Eat N Oranges": []},
    {"Minimum Operations to Make Array Equal": []},
    {"Minimum Number of Vertices to Reach All Nodes": []},
    {"Strings Differ by One Character": ["Count Words Obtained After Adding a Letter"]},
    {"Bank Account Summary": []},
    {"Thousand Separator": []},
    {"Magnetic Force Between Two Balls": ["Minimized Maximum of Products Distributed to Any Store"]},
    {"Three Consecutive Odds": []},
    {"Fix Product Name Format": []},
    {"The Most Recent Orders for Each Product": ["The Most Recent Three Orders", "The Most Frequently Ordered Products for Each Customer"]},
    {"Minimum Cost to Cut a Stick": ["Number of Ways to Divide a Long Corridor"]},
    {"Maximum Number of Non-Overlapping Subarrays With Sum Equals Target": []},
    {"Find Kth Bit in Nth Binary String": []},
    {"Make The String Great": []},
    {"The Most Similar Path in a Graph": []},
    {"Find Longest Awesome Substring": []},
    {"Minimum Swaps to Arrange a Binary Grid": []},
    {"Kth Missing Positive Number": ["Append K Integers With Minimal Sum"]},
    {"Count Good Triplets": ["Count Special Quadruplets"]},
    {"Guess the Majority in a Hidden Array": []},
    {"Minimum Insertions to Balance a Parentheses String": ["Minimum Number of Swaps to Make the String Balanced"]},
    {"Can Convert String in K Moves": []},
    {"Get the Maximum Score": ["Maximum Score of a Node Sequence"]},
    {"Find the Winner of an Array Game": []},
    {"Patients With a Condition": []},
    {"The Most Recent Three Orders": ["The Most Recent Orders for Each Product"]},
    {"String Compression II": []},
    {"Minimum Number of Increments on Subarrays to Form a Target Array": []},
    {"Minimum Suffix Flips": []},
    {"Shuffle String": []},
    {"Find the Index of the Large Integer": ["Search in a Sorted Array of Unknown Size"]},
    {"Number of Good Leaf Nodes Pairs": []},
    {"Number of Nodes in the Sub-Tree With the Same Label": []},
    {"Water Bottles": []},
    {"Number of Good Ways to Split a String": []},
    {"Diameter of N-Ary Tree": ["Diameter of Binary Tree"]},
    {"Count Odd Numbers in an Interval Range": []},
    {"Maximum Number of Non-Overlapping Substrings": []},
    {"Find a Value of a Mysterious Function Closest to Target": []},
    {"Number of Sub-arrays With Odd Sum": ["Subsequence of Size K With the Largest Even Sum"]},
    {"Best Position for a Service Centre": []},
    {"Path with Maximum Probability": ["Number of Ways to Arrive at Destination"]},
    {"Stone Game IV": ["Stone Game V", "Stone Game VI", "Stone Game VII", "Stone Game VIII", "Stone Game IX"]},
    {"Find Users With Valid E-Mails": []},
    {"Customer Order Frequency": []},
    {"Number of Substrings With Only 1s": ["Count Number of Homogenous Substrings", "Count Vowel Substrings of a String"]},
    {"Move Sub-Tree of N-Ary Tree": ["Find Root of N-Ary Tree"]},
    {"Number of Good Pairs": ["Number of Pairs of Interchangeable Rectangles", "Substrings That Begin and End With the Same Letter"]},
    {"Find Root of N-Ary Tree": ["Move Sub-Tree of N-Ary Tree"]},
    {"Minimum Difference Between Largest and Smallest Value in Three Moves": []},
    {"Last Moment Before All Ants Fall Out of a Plank": ["Count Collisions on a Road"]},
    {"Can Make Arithmetic Progression From Sequence": ["Arithmetic Subarrays"]},
    {"Minimum Possible Integer After at Most K Adjacent Swaps On Digits": []},
    {"Range Sum of Sorted Subarray Sums": []},
    {"Count Submatrices With All Ones": []},
    {"Reformat Date": []},
    {"Number of Subsequences That Satisfy the Given Sum Condition": []},
    {"Path Crossing": []},
    {"Countries You Can Safely Invest In": ["Average Salary: Departments VS Company"]},
    {"Friendly Movies Streamed Last Month": []},
    {"Check If Array Pairs Are Divisible by k": ["Count Array Pairs Divisible by K"]},
    {"Parallel Courses II": ["Parallel Courses"]},
    {"Max Value of Equation": ["Count Pairs in Two Arrays"]},
    {"Design a File Sharing System": ["Design Twitter"]},
    {"Avoid Flood in The City": []},
    {"Average Salary Excluding the Minimum and Maximum Salary": []},
    {"XOR Operation in an Array": []},
    {"The kth Factor of n": []},
    {"Longest Subarray of 1's After Deleting One Element": []},
    {"Making File Names Unique": []},
    {"Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree": []},
    {"Clone N-ary Tree": ["Clone Graph", "Copy List with Random Pointer", "Clone Binary Tree With Random Pointer"]},
    {"Clone Binary Tree With Random Pointer": ["Clone Graph", "Copy List with Random Pointer", "Clone N-ary Tree"]},
    {"Minimum Number of Days to Make m Bouquets": ["Maximize the Confusion of an Exam", "Earliest Possible Day of Full Bloom"]},
    {"Allocate Mailboxes": []},
    {"Least Number of Unique Integers after K Removals": []},
    {"Group Sold Products By The Date": ["Finding the Topic of Each Post"]},
    {"Sales by Day of the Week": []},
    {"Kth Ancestor of a Tree Node": []},
    {"Running Sum of 1d Array": []},
    {"Delete N Nodes After M Nodes of a Linked List": ["Remove Nth Node From End of List", "Remove Zero Sum Consecutive Nodes from Linked List"]},
    {"Paint House III": []},
    {"Design Browser History": []},
    {"Subrectangle Queries": []},
    {"Find Two Non-overlapping Sub-arrays Each With Target Sum": []},
    {"The k Strongest Values in an Array": []},
    {"Final Prices With a Special Discount in a Shop": []},
    {"Shuffle the Array": []},
    {"Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts": []},
    {"Maximum Product of Two Elements in an Array": []},
    {"Cherry Pickup II": []},
    {"Probability of a Two Boxes Having The Same Number of Distinct Balls": []},
    {"Find All The Lonely Nodes": ["Binary Tree Tilt", "Univalued Binary Tree"]},
    {"Course Schedule IV": []},
    {"Calculate Salaries": []},
    {"Reorder Routes to Make All Paths Lead to the City Zero": []},
    {"Rectangles Area": []},
    {"Make Two Arrays Equal by Reversing Sub-arrays": []},
    {"Active Users": []},
    {"Pseudo-Palindromic Paths in a Binary Tree": []},
    {"Max Dot Product of Two Subsequences": []},
    {"Maximum Number of Vowels in a Substring of Given Length": []},
    {"Check If a Word Occurs As a Prefix of Any Word in a Sentence": ["Counting Words With a Given Prefix"]},
    {"Check If a String Contains All Binary Codes of Size K": []},
    {"Number of Students Doing Homework at a Given Time": []},
    {"Count Good Nodes in Binary Tree": []},
    {"Consecutive Characters": ["Max Consecutive Ones", "Check if an Array Is Consecutive", "Count Number of Homogenous Substrings", "Longest Substring of One Repeating Character"]},
    {"Maximum Number of Darts Inside of a Circular Dartboard": []},
    {"Simplified Fractions": []},
    {"Rearrange Words in a Sentence": []},
    {"Form Largest Integer With Digits That Add up to Target": []},
    {"People Whose List of Favorite Companies Is Not a Subset of Another List": []},
    {"Apples & Oranges": []},
    {"Number of Ways of Cutting a Pizza": []},
    {"Minimum Time to Collect All Apples in a Tree": []},
    {"Build an Array With Stack Operations": []},
    {"Evaluate Boolean Expression": []},
    {"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit": []},
    {"Find the Kth Smallest Sum of a Matrix With Sorted Rows": []},
    {"Count Triplets That Can Form Two Arrays of Equal XOR": []},
    {"Max Difference You Can Get From Changing an Integer": []},
    {"Number of Ways to Wear Different Hats to Each Other": ["The Number of Good Subsets"]},
    {"Create a Session Bar Chart": ["Count Salary Categories"]},
    {"Destination City": []},
    {"Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree": []},
    {"Kids With the Greatest Number of Candies": []},
    {"Check If a String Can Break Another String": []},
    {"Check If All 1's Are at Least Length K Places Away": []},
    {"Maximum Score After Splitting a String": []},
    {"Maximum Points You Can Obtain from Cards": ["Maximum Score from Performing Multiplication Operations", "Removing Minimum and Maximum From Array"]},
    {"Perform String Shifts": []},
    {"Constrained Subsequence Sum": []},
    {"Counting Elements": []},
    {"Diagonal Traverse II": []},
    {"Leftmost Column with at Least a One": []},
    {"First Unique Number": []},
    {"Minimum Number of Frogs Croaking": []},
    {"Build Array Where You Can Find The Maximum Exactly K Comparisons": []},
    {"NPV Queries": []},
    {"Reformat The String": []},
    {"Display Table of Food Orders in a Restaurant": []},
    {"The k-th Lexicographical String of All Happy Strings of Length n": []},
    {"Restore The Array": ["Number of Ways to Separate Numbers"]},
    {"Find the Minimum Number of Fibonacci Numbers Whose Sum Is K": []},
    {"HTML Entity Parser": []},
    {"Queries on a Permutation With Key": []},
    {"Number of Ways to Paint N \u00d7 3 Grid": ["Painting a Grid With Three Different Colors"]},
    {"Top Travellers": []},
    {"Find the Quiet Students in All Exams": []},
    {"String Matching in an Array": []},
    {"Minimum Value to Get Positive Step by Step Sum": []},
    {"Longest Happy String": ["Reorganize String"]},
    {"Reducing Dishes": []},
    {"Construct K Palindrome Strings": []},
    {"Count Largest Group": []},
    {"Number of Steps to Reduce a Number in Binary Representation to One": ["Minimum Moves to Reach Target Score"]},
    {"Minimum Subsequence in Non-Increasing Order": ["Count Hills and Valleys in an Array"]},
    {"Stone Game III": ["Stone Game V", "Stone Game VI", "Stone Game VII", "Stone Game VIII", "Stone Game IX"]},
    {"Circle and Rectangle Overlapping": []},
    {"Find Lucky Integer in an Array": []},
    {"Design Underground System": ["Design Bitset"]},
    {"Capital Gain/Loss": []},
    {"Longest Happy Prefix": ["Sum of Scores of Built Strings"]},
    {"Customers Who Bought Products A and B but Not C": []},
    {"Find All Good Strings": []},
    {"Pizza With 3n Slices": []},
    {"Check if There is a Valid Path in a Grid": []},
    {"Total Sales Amount by Year": []},
    {"Count Number of Teams": []},
    {"Create Target Array in the Given Order": []},
    {"Sort Integers by The Power Value": []},
    {"Four Divisors": []},
    {"Balance a Binary Search Tree": []},
    {"Replace Employee ID With The Unique Identifier": []},
    {"Maximum Performance of a Team": ["Maximum Fruits Harvested After at Most K Steps"]},
    {"Find a Corresponding Node of a Binary Tree in a Clone of That Tree": []},
    {"Number of Times Binary String Is Prefix-Aligned": ["Bulb Switcher", "Bulb Switcher II"]},
    {"Lucky Numbers in a Matrix": []},
    {"Generate a String With Characters That Have Odd Counts": []},
    {"Find the Distance Value Between Two Arrays": []},
    {"Frog Position After T Seconds": []},
    {"Get the Second Most Recent Activity": []},
    {"Maximum Sum BST in Binary Tree": []},
    {"Minimum Cost to Make at Least One Valid Path in a Grid": ["Minimum Weighted Subgraph With the Required Paths"]},
    {"Time Needed to Inform All Employees": ["Maximum Depth of Binary Tree", "Binary Tree Maximum Path Sum"]},
    {"Cinema Seat Allocation": []},
    {"Design a Stack With Increment Operation": []},
    {"Rank Teams by Votes": ["Online Election"]},
    {"Increasing Decreasing String": []},
    {"Find the Longest Substring Containing Vowels in Even Counts": []},
    {"Longest ZigZag Path in a Binary Tree": []},
    {"Largest Multiple of Three": []},
    {"How Many Numbers Are Smaller Than the Current Number": ["Count of Smaller Numbers After Self"]},
    {"Number of Substrings Containing All Three Characters": ["Vowels of All Substrings"]},
    {"Count All Valid Pickup and Delivery Options": []},
    {"Linked List in Binary Tree": []},
    {"Validate Binary Tree Nodes": []},
    {"Closest Divisors": []},
    {"Sort Integers by The Number of 1 Bits": ["Find Subsequence of Length K With the Largest Sum"]},
    {"Activity Participants": []},
    {"Number of Trusted Contacts of a Customer": []},
    {"Students With Invalid Departments": []},
    {"Count Negative Numbers in a Sorted Matrix": []},
    {"Maximum Students Taking Exam": []},
    {"Product of the Last K Numbers": []},
    {"Maximum Number of Events That Can Be Attended": ["Maximum Number of Events That Can Be Attended II", "Maximum Earnings From Taxi"]},
    {"Apply Discount Every n Orders": []},
    {"Tweet Counts Per Frequency": []},
    {"Angle Between Hands of a Clock": []},
    {"Construct Target Array With Multiple Sums": []},
    {"Jump Game IV": ["Jump Game VII"]},
    {"Number of Days Between Two Dates": []},
    {"Movie Rating": []},
    {"Number of Steps to Reduce a Number to Zero": ["Minimum Moves to Reach Target Score", "Count Operations to Obtain Zero"]},
    {"Reduce Array Size to The Half": []},
    {"Jump Game V": ["Jump Game VII"]},
    {"Minimum Number of Steps to Make Two Strings Anagram": ["Determine if Two Strings Are Close", "Minimum Number of Steps to Make Two Strings Anagram II"]},
    {"The K Weakest Rows in a Matrix": []},
    {"Find the City With the Smallest Number of Neighbors at a Threshold Distance": ["Second Minimum Time to Reach Destination"]},
    {"Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold": ["K Radius Subarray Averages"]},
    {"Number of Transactions per Visit": ["Find the Missing IDs"]},
    {"Remove Palindromic Subsequences": []},
    {"Reverse Subarray To Maximize Array Value": []},
    {"Check If N and Its Double Exist": ["Keep Multiplying Found Values by Two"]},
    {"Rank Transform of an Array": ["Rank Transform of a Matrix", "Find Target Indices After Sorting Array"]},
    {"Filter Restaurants by Vegan-Friendly, Price and Distance": []},
    {"Delete Leaves With a Given Value": []},
    {"List the Products Ordered in a Period": []},
    {"Break a Palindrome": []},
    {"Sort the Matrix Diagonally": []},
    {"Minimum Difficulty of a Job Schedule": []},
    {"Minimum Number of Taps to Open to Water a Garden": []},
    {"Minimum Distance to Type a Word Using Two Fingers": ["Minimum Time to Type Word Using Special Typewriter"]},
    {"Maximum 69 Number": []},
    {"Restaurant Growth": []},
    {"Number of Operations to Make Network Connected": []},
    {"Ads Performance": []},
    {"Convert Integer to the Sum of Two No-Zero Integers": []},
    {"Minimum Flips to Make a OR b Equal to c": ["Minimum Bit Flips to Convert Number"]},
    {"Maximum Product of Splitted Binary Tree": ["Count Nodes With the Highest Score"]},
    {"Distinct Echo Substrings": ["Find Substring With Given Hash Value"]},
    {"Decompress Run-Length Encoded List": ["String Compression"]},
    {"Print Words Vertically": []},
    {"Running Total for Different Genders": ["Last Person to Fit in the Bus"]},
    {"XOR Queries of a Subarray": []},
    {"Minimum Insertion Steps to Make a String Palindrome": ["Minimum Number of Moves to Make Palindrome"]},
    {"Decrypt String from Alphabet to Integer Mapping": []},
    {"Get Watched Videos by Your Friends": []},
    {"Jump Game III": ["Jump Game II", "Jump Game", "Jump Game VII"]},
    {"Deepest Leaves Sum": []},
    {"Sum of Nodes with Even-Valued Grandparent": []},
    {"Matrix Block Sum": ["Stamping the Grid"]},
    {"All Elements in Two Binary Search Trees": []},
    {"Find N Unique Integers Sum up to Zero": []},
    {"Maximum Candies You Can Get from Boxes": []},
    {"Maximum Number of Occurrences of a Substring": []},
    {"Find the Team Size": []},
    {"Number of Paths with Max Score": []},
    {"Sum of Mutated Array Closest to Target": []},
    {"Shortest Path in a Grid with Obstacles Elimination": ["Shortest Path to Get Food"]},
    {"Weather Type in Each Country": []},
    {"Find Numbers with Even Number of Digits": ["Finding 3-Digit Even Numbers"]},
    {"Replace Elements with Greatest Element on Right Side": ["Two Furthest Houses With Different Colors"]},
    {"Sequential Digits": []},
    {"Verbal Arithmetic Puzzle": []},
    {"Minimum Falling Path Sum II": ["Minimum Falling Path Sum"]},
    {"Convert Binary Number in a Linked List to Integer": []},
    {"Find the Start and End Number of Continuous Ranges": ["Report Contiguous Dates", "Find the Missing IDs"]},
    {"Remove Covered Intervals": []},
    {"Iterator for Combination": []},
    {"Maximum Side Length of a Square with Sum Less than or Equal to Threshold": []},
    {"Find the Smallest Divisor Given a Threshold": ["Minimized Maximum of Products Distributed to Any Store"]},
    {"Group the People Given the Group Size They Belong To": []},
    {"Subtract the Product and Sum of Digits of an Integer": []},
    {"Students and Examinations": []},
    {"Traffic Light Controlled Intersection": []},
    {"Divide Array in Sets of K Consecutive Numbers": ["Split Array into Consecutive Subsequences", "All Divisions With the Highest Score of a Binary Array"]},
    {"Count Square Submatrices with All Ones": ["Minimum Cost Homecoming of a Robot in a Grid", "Count Fertile Pyramids in a Land"]},
    {"Number of Burgers with No Waste of Ingredients": []},
    {"Find Winner on a Tic Tac Toe Game": []},
    {"Number of Ships in a Rectangle": []},
    {"Delete Tree Nodes": []},
    {"Minimum Number of Flips to Convert Binary Matrix to Zero Matrix": ["Minimum Operations to Remove Adjacent Ones in Matrix", "Remove All Ones With Row and Column Flips", "Remove All Ones With Row and Column Flips II"]},
    {"Element Appearing More Than 25% In Sorted Array": []},
    {"Palindrome Partitioning III": ["Palindrome Partitioning IV"]},
    {"Remove Interval": []},
    {"Hexspeak": []},
    {"Number of Ways to Stay in the Same Place After Some Steps": []},
    {"Search Suggestions System": []},
    {"Count Servers that Communicate": []},
    {"Minimum Time Visiting All Points": []},
    {"Print Immutable Linked List in Reverse": []},
    {"Page Recommendations": ["Page Recommendations II", "Strong Friendship"]},
    {"Minimum Moves to Move a Box to Their Target Location": []},
    {"Greatest Sum Divisible by Three": []},
    {"Find Elements in a Contaminated Binary Tree": []},
    {"Shift 2D Grid": []},
    {"Handshakes That Don't Cross": []},
    {"Synonymous Sentences": []},
    {"All People Report to the Given Manager": []},
    {"Smallest Common Region": ["Lowest Common Ancestor of a Binary Search Tree", "Lowest Common Ancestor of a Binary Tree"]},
    {"Encode Number": ["Convert to Base -2"]},
    {"Maximum Score Words Formed by Letters": ["Maximum Good People Based on Statements"]},
    {"Number of Closed Islands": []},
    {"Cells with Odd Values in a Matrix": []},
    {"Average Selling Price": []},
    {"Check If It Is a Good Array": []},
    {"Minimum Remove to Make Valid Parentheses": ["Minimum Number of Swaps to Make the String Balanced", "Check if a Parentheses String Can Be Valid"]},
    {"Count Number of Nice Subarrays": []},
    {"Minimum Swaps to Make Strings Equal": ["Determine if Two Strings Are Close"]},
    {"Palindrome Removal": []},
    {"Tree Diameter": ["Count Subtrees With Max Distance Between Cities"]},
    {"Design A Leaderboard": []},
    {"Array Transformation": []},
    {"Reconstruct a 2-Row Binary Matrix": ["Find Valid Matrix Given Row and Column Sums"]},
    {"Web Crawler Multithreaded": ["Web Crawler"]},
    {"Number of Comments per Post": []},
    {"Tiling a Rectangle with the Fewest Squares": []},
    {"Maximum Length of a Concatenated String with Unique Characters": []},
    {"Circular Permutation in Binary Representation": []},
    {"Find Positive Integer Solution for a Given Equation": []},
    {"Web Crawler": ["Web Crawler Multithreaded"]},
    {"Maximum Profit in Job Scheduling": ["Maximum Earnings From Taxi", "Two Best Non-Overlapping Events"]},
    {"Replace the Substring for Balanced String": []},
    {"Remove Sub-Folders from the Filesystem": []},
    {"Check If It Is a Straight Line": []},
    {"Divide Chocolate": ["Split Array Largest Sum", "Capacity To Ship Packages Within D Days"]},
    {"Toss Strange Coins": []},
    {"Meeting Scheduler": []},
    {"Missing Number In Arithmetic Progression": []},
    {"Airplane Seat Assignment Probability": []},
    {"The Dining Philosophers": []},
    {"Report Contiguous Dates": ["Find the Start and End Number of Continuous Ranges", "Find the Missing IDs"]},
    {"Maximum Equal Frequency": []},
    {"Dice Roll Simulation": ["Find Missing Observations"]},
    {"Queens That Can Attack the King": []},
    {"Split a String in Balanced Strings": []},
    {"Count Vowels Permutation": []},
    {"Path with Maximum Gold": []},
    {"Longest Arithmetic Subsequence of Given Difference": []},
    {"Minimum Cost to Move Chips to The Same Position": ["Minimum Number of Operations to Move All Balls to Each Box"]},
    {"Valid Palindrome III": ["Valid Palindrome II"]},
    {"Stepping Numbers": []},
    {"Two Sum BSTs": ["Two Sum IV - Input is a BST"]},
    {"Intersection of Three Sorted Arrays": ["Intersection of Two Arrays", "Intersection of Multiple Arrays"]},
    {"Team Scores in Football Tournament": []},
    {"Queries Quality and Percentage": ["Percentage of Users Attended a Contest"]},
    {"Minimum Moves to Reach Target with Rotations": []},
    {"Remove All Adjacent Duplicates in String II": ["Remove All Adjacent Duplicates In String", "Replace Non-Coprime Numbers in Array"]},
    {"Get Equal Substrings Within Budget": []},
    {"Unique Number of Occurrences": []},
    {"Design Skiplist": ["Design HashSet", "Design HashMap", "Design Linked List"]},
    {"Monthly Transactions II": ["Monthly Transactions I"]},
    {"Last Person to Fit in the Bus": ["Running Total for Different Genders", "The Number of Seniors and Juniors to Join the Company", "The Number of Seniors and Juniors to Join the Company II"]},
    {"Sort Items by Groups Respecting Dependencies": []},
    {"Smallest String With Swaps": ["Minimize Hamming Distance After Swap Operations", "Process Restricted Friend Requests", "Largest Number After Digit Swaps by Parity"]},
    {"Ugly Number III": ["Ugly Number II"]},
    {"Minimum Absolute Difference": ["Minimum Cost of Buying Candies With Discount"]},
    {"Minimum Time to Build Blocks": []},
    {"Find Smallest Common Element in All Rows": ["Intersection of Multiple Arrays"]},
    {"Minimum Knight Moves": []},
    {"How Many Apples Can You Put into the Basket": []},
    {"Fizz Buzz Multithreaded": ["Fizz Buzz", "Print Zero Even Odd"]},
    {"Tournament Winners": []},
    {"Monthly Transactions I": ["Monthly Transactions II"]},
    {"Critical Connections in a Network": []},
    {"K-Concatenation Maximum Sum": []},
    {"Reverse Substrings Between Each Pair of Parentheses": []},
    {"Maximum Number of Balloons": []},
    {"Design Bounded Blocking Queue": []},
    {"Make Array Strictly Increasing": []},
    {"Maximum Subarray Sum with One Deletion": []},
    {"Day of the Week": []},
    {"Distance Between Bus Stops": []},
    {"Maximum Number of Ones": []},
    {"Shortest Distance to Target Color": []},
    {"Before and After Puzzle": []},
    {"Count Substrings with Only One Distinct Letter": []},
    {"Reformat Department Table": []},
    {"Number of Valid Words for Each Puzzle": []},
    {"Can Make Palindrome from Substring": ["Plates Between Candles"]},
    {"Diet Plan Performance": []},
    {"Prime Arrangements": []},
    {"Immediate Food Delivery II": []},
    {"Immediate Food Delivery I": []},
    {"Dinner Plate Stacks": []},
    {"Remove Zero Sum Consecutive Nodes from Linked List": ["Delete N Nodes After M Nodes of a Linked List"]},
    {"Compare Strings by Frequency of the Smallest Character": []},
    {"Invalid Transactions": []},
    {"Optimize Water Distribution in a Village": []},
    {"Minimum Cost to Connect Sticks": ["Minimum Cost to Merge Stones"]},
    {"Design File System": []},
    {"Single-Row Keyboard": []},
    {"Product Price at a Given Date": []},
    {"Last Substring in Lexicographical Order": []},
    {"As Far from Land as Possible": ["Shortest Distance from All Buildings", "K Highest Ranked Items Within a Price Range"]},
    {"Maximum Level Sum of a Binary Tree": []},
    {"Find Words That Can Be Formed by Characters": []},
    {"Market Analysis II": []},
    {"Market Analysis I": []},
    {"Online Majority Element In Subarray": []},
    {"Swap For Longest Repeated Character Substring": []},
    {"Number of Dice Rolls With Target Sum": ["Equal Sum Arrays With Minimum Number of Operations", "Find Missing Observations"]},
    {"Day of the Year": []},
    {"String Transforms Into Another String": []},
    {"Analyze User Website Visit Pattern": []},
    {"Minimum Swaps to Group All 1's Together": ["Minimum Adjacent Swaps for K Consecutive Ones", "Minimum Swaps to Group All 1's Together II"]},
    {"Check If a Number Is Majority Element in a Sorted Array": ["Majority Element", "Majority Element II"]},
    {"Article Views II": []},
    {"Article Views I": []},
    {"Longest Chunked Palindrome Decomposition": []},
    {"Snapshot Array": []},
    {"Binary Tree Coloring Game": []},
    {"Decrease Elements To Make Array Zigzag": []},
    {"Longest Common Subsequence": ["Longest Palindromic Subsequence", "Delete Operation for Two Strings", "Shortest Common Supersequence ", "Maximize Number of Subsequences in a String"]},
    {"User Activity for the Past 30 Days II": []},
    {"User Activity for the Past 30 Days I": []},
    {"Stone Game II": ["Stone Game V", "Stone Game VI", "Stone Game VII", "Stone Game VIII", "Stone Game IX"]},
    {"Largest 1-Bordered Square": []},
    {"Alphabet Board Path": []},
    {"N-th Tribonacci Number": ["Climbing Stairs", "Fibonacci Number"]},
    {"Parallel Courses": ["Course Schedule II", "Parallel Courses II", "Parallel Courses III"]},
    {"Connecting Cities With Minimum Cost": ["Minimum Cost to Reach City With Discounts"]},
    {"Armstrong Number": []},
    {"Largest Unique Number": []},
    {"Reported Posts II": []},
    {"Maximum of Absolute Value Expression": []},
    {"Minimum Cost Tree From Leaf Values": []},
    {"Shortest Path with Alternating Colors": []},
    {"Number of Equivalent Domino Pairs": []},
    {"User Purchase Platform": []},
    {"Active Businesses": []},
    {"Smallest Sufficient Team": ["The Number of Good Subsets", "Minimum Number of Work Sessions to Finish the Tasks"]},
    {"Longest Well-Performing Interval": []},
    {"Lowest Common Ancestor of Deepest Leaves": ["Lowest Common Ancestor of a Binary Tree IV"]},
    {"Relative Sort Array": []},
    {"Divide Array Into Increasing Sequences": []},
    {"Maximum Average Subtree": ["Count Nodes Equal to Sum of Descendants"]},
    {"Remove Vowels from a String": ["Reverse Vowels of a String"]},
    {"Number of Days in a Month": []},
    {"Building H2O": []},
    {"Print Zero Even Odd": ["Print FooBar Alternately", "Fizz Buzz Multithreaded"]},
    {"Print FooBar Alternately": ["Print in Order", "Print Zero Even Odd"]},
    {"Print in Order": ["Print FooBar Alternately"]},
    {"Reported Posts": []},
    {"Highest Grade For Each Student": ["Department Highest Salary"]},
    {"Maximum Nesting Depth of Two Valid Parentheses Strings": ["Maximum Nesting Depth of the Parentheses"]},
    {"Delete Nodes And Return Forest": ["Count Nodes With the Highest Score"]},
    {"Corporate Flight Bookings": []},
    {"Defanging an IP Address": []},
    {"New Users Daily Count": []},
    {"Parsing A Boolean Expression": []},
    {"Filling Bookcase Shelves": []},
    {"Path In Zigzag Labelled Binary Tree": []},
    {"Distribute Candies to People": []},
    {"Path With Maximum Minimum Value": ["Path With Minimum Effort"]},
    {"The Earliest Moment When Everyone Become Friends": ["Number of Provinces"]},
    {"Find K-Length Substrings With No Repeated Characters": []},
    {"Two Sum Less Than K": ["Two Sum", "Two Sum II - Input Array Is Sorted", "3Sum Smaller", "Subarray Product Less Than K"]},
    {"Unpopular Books": []},
    {"Game Play Analysis V": ["Game Play Analysis IV"]},
    {"Brace Expansion II": ["Brace Expansion"]},
    {"Find in Mountain Array": ["Peak Index in a Mountain Array", "Minimum Number of Removals to Make Mountain Array", "Find Good Days to Rob the Bank"]},
    {"Car Pooling": ["Meeting Rooms II"]},
    {"Statistics from a Large Sample": []},
    {"Shortest Common Supersequence ": ["Longest Common Subsequence"]},
    {"Shortest Path in Binary Matrix": []},
    {"Largest Values From Labels": []},
    {"Duplicate Zeros": []},
    {"Confusing Number II": ["Confusing Number"]},
    {"Brace Expansion": ["Decode String", "Letter Case Permutation", "Brace Expansion II"]},
    {"High Five": []},
    {"Sum of Digits in the Minimum Number": ["Add Digits"]},
    {"Sales Analysis III": ["Sales Analysis II"]},
    {"Sales Analysis II": ["Sales Analysis I", "Sales Analysis III"]},
    {"Sales Analysis I": ["Sales Analysis II"]},
    {"Smallest Subsequence of Distinct Characters": ["Find the Most Competitive Subsequence"]},
    {"Insufficient Nodes in Root to Leaf Paths": []},
    {"Letter Tile Possibilities": []},
    {"Occurrences After Bigram": []},
    {"Project Employees III": ["Project Employees II"]},
    {"Project Employees II": ["Project Employees I", "Project Employees III"]},
    {"Project Employees I": ["Project Employees II"]},
    {"Number of Submatrices That Sum to Target": []},
    {"Adding Two Negabinary Numbers": []},
    {"Flip Columns For Maximum Number of Equal Rows": []},
    {"Greatest Common Divisor of Strings": ["Find Greatest Common Divisor of Array"]},
    {"Product Sales Analysis III": ["Product Sales Analysis II"]},
    {"Product Sales Analysis II": ["Product Sales Analysis I", "Product Sales Analysis III"]},
    {"Product Sales Analysis I": ["Product Sales Analysis II"]},
    {"Digit Count in Range": ["Number of Digit One"]},
    {"Campus Bikes II": ["Campus Bikes"]},
    {"Index Pairs of a String": []},
    {"Fixed Point": []},
    {"Number of Valid Subarrays": ["Number of Smooth Descent Periods of a Stock"]},
    {"Longest Repeating Substring": []},
    {"Lexicographically Smallest Equivalent String": []},
    {"Missing Element in Sorted Array": []},
    {"All Paths from Source Lead to Destination": []},
    {"Minimize Rounding Error to Meet Target": []},
    {"Campus Bikes": ["Campus Bikes II"]},
    {"Confusing Number": ["Strobogrammatic Number", "Confusing Number II"]},
    {"Shortest Way to Form String": ["Is Subsequence", "Number of Matching Subsequences"]},
    {"Distant Barcodes": []},
    {"Previous Permutation With One Swap": []},
    {"Grumpy Bookstore Owner": []},
    {"Height Checker": []},
    {"Actors and Directors Who Cooperated At Least Three Times": []},
    {"Last Stone Weight II": ["Partition Array Into Two Arrays to Minimize Sum Difference"]},
    {"Longest String Chain": []},
    {"Remove All Adjacent Duplicates In String": ["Remove All Adjacent Duplicates in String II"]},
    {"Last Stone Weight": []},
    {"Customers Who Bought All Products": []},
    {"Longest Duplicate Substring": []},
    {"Partition Array for Maximum Sum": ["Subsequence of Size K With the Largest Even Sum"]},
    {"Flower Planting With No Adjacent": []},
    {"Robot Bounded In Circle": []},
    {"Moving Stones Until Consecutive II": ["Minimum Number of Operations to Make Array Continuous"]},
    {"Minimum Score Triangulation of Polygon": []},
    {"Binary Search Tree to Greater Sum Tree": []},
    {"Valid Boomerang": []},
    {"Escape a Large Maze": []},
    {"Uncrossed Lines": ["Edit Distance"]},
    {"Coloring A Border": ["Island Perimeter"]},
    {"Moving Stones Until Consecutive": []},
    {"Stream of Characters": []},
    {"Maximum Sum of Two Non-Overlapping Subarrays": []},
    {"Matrix Cells in Distance Order": ["Cells in a Range on an Excel Sheet"]},
    {"Two City Scheduling": []},
    {"Recover a Tree From Preorder Traversal": []},
    {"Longest Arithmetic Subsequence": []},
    {"Maximum Difference Between Node and Ancestor": []},
    {"Divisor Game": []},
    {"Video Stitching": []},
    {"Camelcase Matching": []},
    {"Sum of Root To Leaf Binary Numbers": []},
    {"Remove Outermost Parentheses": []},
    {"Number of Enclaves": []},
    {"Next Greater Node In Linked List": []},
    {"Binary Prefix Divisible By 5": []},
    {"Convert to Base -2": ["Encode Number"]},
    {"Binary String With Substrings Representing 1 To N": []},
    {"Smallest Integer Divisible by K": []},
    {"Best Sightseeing Pair": []},
    {"Partition Array Into Three Parts With Equal Sum": ["Find the Middle Index in Array"]},
    {"Numbers With Repeated Digits": []},
    {"Capacity To Ship Packages Within D Days": ["Split Array Largest Sum", "Divide Chocolate", "Cutting Ribbons", "Minimized Maximum of Products Distributed to Any Store"]},
    {"Pairs of Songs With Total Durations Divisible by 60": []},
    {"Complement of Base 10 Integer": []},
    {"Construct Binary Search Tree from Preorder Traversal": []},
    {"Minimum Domino Rotations For Equal Row": []},
    {"Clumsy Factorial": []},
    {"Maximize Sum Of Array After K Negations": ["Find Subsequence of Length K With the Largest Sum"]},
    {"Max Consecutive Ones III": ["Longest Substring with At Most K Distinct Characters", "Longest Repeating Character Replacement", "Max Consecutive Ones", "Max Consecutive Ones II", "Maximize the Confusion of an Exam"]},
    {"Check If Word Is Valid After Substitutions": ["Valid Parentheses"]},
    {"Find Common Characters": ["Intersection of Two Arrays II"]},
    {"Grid Illumination": ["N-Queens"]},
    {"Minimum Cost to Merge Stones": ["Burst Balloons", "Minimum Cost to Connect Sticks"]},
    {"Available Captures for Rook": []},
    {"Maximum Binary Tree II": ["Maximum Binary Tree"]},
    {"Find the Town Judge": ["Find the Celebrity"]},
    {"Number of Squareful Arrays": ["Permutations II"]},
    {"Minimum Number of K Consecutive Bit Flips": ["Bulb Switcher", "Minimum Time to Remove All Cars Containing Illegal Goods"]},
    {"Rotting Oranges": ["Walls and Gates", "Detonate the Maximum Bombs"]},
    {"Cousins in Binary Tree": ["Binary Tree Level Order Traversal"]},
    {"Subarrays with K Different Integers": ["Longest Substring Without Repeating Characters", "Longest Substring with At Most Two Distinct Characters", "Longest Substring with At Most K Distinct Characters", "Count Vowel Substrings of a String", "Number of Unique Flavors After Sharing K Candies"]},
    {"Broken Calculator": ["2 Keys Keyboard"]},
    {"Satisfiability of Equality Equations": []},
    {"Add to Array-Form of Integer": ["Add Two Numbers", "Plus One", "Add Binary", "Add Strings"]},
    {"Smallest String Starting From Leaf": ["Sum Root to Leaf Numbers", "Binary Tree Paths"]},
    {"Vertical Order Traversal of a Binary Tree": []},
    {"Interval List Intersections": ["Merge Intervals", "Merge Sorted Array", "Employee Free Time"]},
    {"Sum of Even Numbers After Queries": []},
    {"String Without AAA or BBB": []},
    {"Minimum Cost For Tickets": ["Coin Change"]},
    {"Triples with Bitwise AND Equal To Zero": []},
    {"Time Based Key-Value Store": ["Stock Price Fluctuation "]},
    {"Unique Paths III": ["Sudoku Solver", "Unique Paths II", "Word Search II"]},
    {"Distribute Coins in Binary Tree": ["Sum of Distances in Tree", "Binary Tree Cameras"]},
    {"Longest Turbulent Subarray": ["Maximum Subarray"]},
    {"Squares of a Sorted Array": ["Merge Sorted Array", "Sort Transformed Array"]},
    {"Largest Perimeter Triangle": ["Largest Triangle Area"]},
    {"Odd Even Jump": []},
    {"Subarray Sums Divisible by K": ["Subarray Sum Equals K", "Make Sum Divisible by P"]},
    {"K Closest Points to Origin": ["Kth Largest Element in an Array", "Top K Frequent Elements", "Top K Frequent Words", "Find Nearest Point That Has the Same X or Y Coordinate"]},
    {"Equal Rational Numbers": []},
    {"Flip Binary Tree To Match Preorder Traversal": []},
    {"Powerful Integers": []},
    {"Pancake Sorting": []},
    {"Binary Tree Cameras": ["Distribute Coins in Binary Tree"]},
    {"Numbers With Same Consecutive Differences": []},
    {"Vowel Spellchecker": []},
    {"Univalued Binary Tree": ["Find All The Lonely Nodes"]},
    {"Least Operators to Express Number": []},
    {"Minimum Area Rectangle II": []},
    {"Maximum Width Ramp": []},
    {"N-Repeated Element in Size 2N Array": []},
    {"Delete Columns to Make Sorted III": []},
    {"Regions Cut By Slashes": []},
    {"Check Completeness of a Binary Tree": []},
    {"Prison Cells After N Days": []},
    {"Tallest Billboard": ["Partition Array Into Two Arrays to Minimize Sum Difference"]},
    {"Delete Columns to Make Sorted II": []},
    {"Most Stones Removed with Same Row or Column": []},
    {"Bag of Tokens": []},
    {"Array of Doubled Pairs": ["Find Original Array From Doubled Array"]},
    {"Largest Component Size by Common Factor": ["Groups of Strings"]},
    {"Verifying an Alien Dictionary": []},
    {"Flip Equivalent Binary Trees": []},
    {"Reveal Cards In Increasing Order": []},
    {"Largest Time for Given Digits": []},
    {"Minimum Area Rectangle": []},
    {"Minimum Increment to Make Array Unique": ["Maximum Product After K Increments"]},
    {"Validate Stack Sequences": []},
    {"DI String Match": []},
    {"Find the Shortest Superstring": []},
    {"Delete Columns to Make Sorted": []},
    {"Valid Mountain Array": ["Minimum Number of Removals to Make Mountain Array"]},
    {"Distinct Subsequences II": ["Number of Unique Good Subsequences"]},
    {"Minimum Falling Path Sum": ["Minimum Falling Path Sum II"]},
    {"Knight Dialer": []},
    {"Beautiful Array": []},
    {"Number of Recent Calls": []},
    {"Shortest Bridge": []},
    {"Reorder Data in Log Files": []},
    {"Stamping The Sequence": []},
    {"Range Sum of BST": []},
    {"Binary Subarrays With Sum": []},
    {"Flip String to Monotone Increasing": []},
    {"Unique Email Addresses": []},
    {"Minimize Malware Spread": []},
    {"Long Pressed Name": []},
    {"Three Equal Parts": []},
    {"3Sum With Multiplicity": []},
    {"Minimize Malware Spread II": []},
    {"Word Subsets": []},
    {"Complete Binary Tree Inserter": []},
    {"Minimum Add to Make Parentheses Valid": ["Minimum Number of Swaps to Make the String Balanced"]},
    {"Maximum Sum Circular Subarray": []},
    {"Number of Music Playlists": []},
    {"Reverse Only Letters": []},
    {"Partition Array into Disjoint Intervals": ["Sum of Beauty in the Array"]},
    {"Sort Array By Parity II": ["Rearrange Array Elements by Sign", "Sort Even and Odd Indices Independently", "Largest Number After Digit Swaps by Parity"]},
    {"Smallest Range II": []},
    {"X of a Kind in a Deck of Cards": []},
    {"Snakes and Ladders": []},
    {"Sort an Array": []},
    {"Sum of Subarray Minimums": ["Sum of Subarray Ranges"]},
    {"Online Election": ["Rank Teams by Votes"]},
    {"Smallest Range I": []},
    {"Cat and Mouse": ["Cat and Mouse II"]},
    {"Super Palindromes": []},
    {"Numbers At Most N Given Digit Set": []},
    {"Valid Permutations for DI Sequence": []},
    {"RLE Iterator": []},
    {"Orderly Queue": []},
    {"Sort Array By Parity": ["Sort Even and Odd Indices Independently", "Largest Number After Digit Swaps by Parity"]},
    {"Online Stock Span": ["Daily Temperatures"]},
    {"Fruit Into Baskets": []},
    {"Increasing Order Search Tree": []},
    {"All Possible Full Binary Trees": []},
    {"Surface Area of 3D Shapes": []},
    {"Bitwise ORs of Subarrays": []},
    {"Monotonic Array": ["Count Hills and Valleys in an Array"]},
    {"Groups of Special-Equivalent Strings": []},
    {"Sum of Subsequence Widths": []},
    {"Maximum Frequency Stack": []},
    {"Fair Candy Swap": []},
    {"Construct Binary Tree from Preorder and Postorder Traversal": []},
    {"Find and Replace Pattern": []},
    {"Possible Bipartition": []},
    {"Spiral Matrix III": ["Spiral Matrix", "Spiral Matrix II"]},
    {"Super Egg Drop": ["Egg Drop With 2 Eggs and N Floors"]},
    {"Projection Area of 3D Shapes": []},
    {"Uncommon Words from Two Sentences": ["Count Common Words With One Occurrence"]},
    {"Middle of the Linked List": ["Delete the Middle Node of a Linked List", "Maximum Twin Sum of a Linked List"]},
    {"Nth Magical Number": []},
    {"Profitable Schemes": []},
    {"Reachable Nodes In Subdivided Graph": ["Find All People With Secret", "Paths in Maze That Lead to Same Room"]},
    {"Koko Eating Bananas": ["Minimize Max Distance to Gas Station", "Maximum Candies Allocated to K Children", "Minimized Maximum of Products Distributed to Any Store"]},
    {"Boats to Save People": []},
    {"Decoded String at Index": []},
    {"Stone Game": ["Stone Game V", "Stone Game VI", "Stone Game VII", "Stone Game VIII", "Stone Game IX"]},
    {"Walking Robot Simulation": ["Walking Robot Simulation II"]},
    {"Minimum Number of Refueling Stops": []},
    {"Binary Gap": []},
    {"Transpose Matrix": []},
    {"Length of Longest Fibonacci Subsequence": ["Fibonacci Number"]},
    {"Leaf-Similar Trees": []},
    {"Advantage Shuffle": []},
    {"Reordered Power of 2": []},
    {"All Nodes Distance K in Binary Tree": []},
    {"Smallest Subtree with all the Deepest Nodes": []},
    {"Prime Palindrome": ["Sum of k-Mirror Numbers"]},
    {"Lemonade Change": []},
    {"Shortest Path to Get All Keys": []},
    {"Score After Flipping Matrix": ["Remove All Ones With Row and Column Flips"]},
    {"Buddy Strings": ["Determine if Two Strings Are Close", "Check if One String Swap Can Make Strings Equal"]},
    {"Shortest Subarray with Sum at Least K": []},
    {"Exam Room": ["Maximize Distance to Closest Person"]},
    {"Car Fleet": ["Car Fleet II", "Count Collisions on a Road"]},
    {"K-Similar Strings": ["Couples Holding Hands"]},
    {"Mirror Reflection": []},
    {"Score of Parentheses": []},
    {"Minimum Cost to Hire K Workers": []},
    {"Peak Index in a Mountain Array": ["Find Peak Element", "Find in Mountain Array", "Minimum Number of Removals to Make Mountain Array"]},
    {"Loud and Rich": []},
    {"Guess the Word": []},
    {"Backspace String Compare": ["Crawler Log Folder"]},
    {"Hand of Straights": []},
    {"Rectangle Area II": []},
    {"Maximize Distance to Closest Person": ["Exam Room"]},
    {"Longest Mountain in Array": ["Minimum Number of Removals to Make Mountain Array", "Find Good Days to Rob the Bank"]},
    {"Shortest Path Visiting All Nodes": []},
    {"Shifting Letters": ["Replace All Digits with Characters"]},
    {"Similar String Groups": ["Groups of Strings"]},
    {"Push Dominoes": []},
    {"Keys and Rooms": ["Graph Valid Tree"]},
    {"Split Array into Fibonacci Sequence": ["Additive Number", "Fibonacci Number"]},
    {"Rectangle Overlap": ["Rectangle Area"]},
    {"Magic Squares In Grid": ["Largest Magic Square"]},
    {"Image Overlap": []},
    {"New 21 Game": []},
    {"Masking Personal Information": []},
    {"Positions of Large Groups": ["Divide a String Into Groups of Size k"]},
    {"Consecutive Numbers Sum": []},
    {"Find And Replace in String": []},
    {"Flipping an Image": []},
    {"Making A Large Island": []},
    {"Count Unique Characters of All Substrings of a Given String": []},
    {"Sum of Distances in Tree": ["Distribute Coins in Binary Tree", "Count Nodes With the Highest Score"]},
    {"Card Flipping Game": []},
    {"Most Common Word": []},
    {"Goat Latin": []},
    {"Most Profit Assigning Work": ["Maximum Number of Tasks You Can Assign"]},
    {"Binary Trees With Factors": []},
    {"Shortest Distance to a Character": []},
    {"Short Encoding of Words": []},
    {"Friends Of Appropriate Ages": []},
    {"Largest Triangle Area": ["Largest Perimeter Triangle"]},
    {"Linked List Components": ["Merge Nodes in Between Zeros"]},
    {"Race Car": []},
    {"Ambiguous Coordinates": []},
    {"Subdomain Visit Count": []},
    {"Largest Sum of Averages": []},
    {"Bus Routes": []},
    {"Binary Tree Pruning": []},
    {"Number of Lines To Write String": []},
    {"Expressive Words": []},
    {"Soup Servings": []},
    {"Unique Morse Code Words": []},
    {"Chalkboard XOR Game": []},
    {"Split Array With Same Average": ["Partition Array Into Two Arrays to Minimize Sum Difference"]},
    {"Max Increase to Keep City Skyline": []},
    {"Bricks Falling When Hit": ["Last Day Where You Can Still Cross", "Number of Ways to Build Sturdy Brick Wall"]},
    {"All Paths From Source to Target": ["Number of Ways to Arrive at Destination"]},
    {"Champagne Tower": ["Number of Ways to Build House of Cards"]},
    {"Smallest Rotation with Highest Score": []},
    {"Rotate String": []},
    {"Similar RGB Color": []},
    {"Number of Subarrays with Bounded Maximum": []},
    {"Find Eventual Safe States": []},
    {"Minimum Swaps To Make Sequences Increasing": ["Minimum Operations to Make the Array K-Increasing"]},
    {"Cheapest Flights Within K Stops": ["Maximum Vacation Days", "Minimum Cost to Reach City With Discounts"]},
    {"Custom Sort String": []},
    {"Rotated Digits": []},
    {"Number of Matching Subsequences": ["Is Subsequence", "Shortest Way to Form String", "Count Vowel Substrings of a String"]},
    {"Preimage Size of Factorial Zeroes Function": ["Factorial Trailing Zeroes"]},
    {"Domino and Tromino Tiling": []},
    {"Valid Tic-Tac-Toe State": ["Design Tic-Tac-Toe"]},
    {"Escape The Ghosts": ["Cat and Mouse II"]},
    {"Is Graph Bipartite?": []},
    {"Letter Case Permutation": ["Subsets", "Brace Expansion"]},
    {"K-th Smallest Prime Fraction": ["Kth Smallest Element in a Sorted Matrix", "Kth Smallest Number in Multiplication Table", "Find K-th Smallest Pair Distance"]},
    {"K-th Symbol in Grammar": []},
    {"Minimum Distance Between BST Nodes": ["Binary Tree Inorder Traversal"]},
    {"Transform to Chessboard": []},
    {"Rabbits in Forest": []},
    {"Reaching Points": []},
    {"Jewels and Stones": []},
    {"Swap Adjacent in LR String": []},
    {"Split BST": ["Delete Node in a BST"]},
    {"Basic Calculator III": ["Basic Calculator", "Basic Calculator II", "Basic Calculator IV", "Build Binary Expression Tree From Infix Expression"]},
    {"Minimize Max Distance to Gas Station": ["Koko Eating Bananas"]},
    {"Swim in Rising Water": ["Path With Minimum Effort"]},
    {"Sliding Puzzle": []},
    {"Global and Local Inversions": []},
    {"Reorganize String": ["Rearrange String k Distance Apart", "Task Scheduler", "Longest Happy String"]},
    {"Max Chunks To Make Sorted II": ["Max Chunks To Make Sorted"]},
    {"Couples Holding Hands": ["First Missing Positive", "Missing Number", "K-Similar Strings"]},
    {"Partition Labels": ["Merge Intervals"]},
    {"Max Chunks To Make Sorted": ["Max Chunks To Make Sorted II"]},
    {"Basic Calculator IV": ["Parse Lisp Expression", "Basic Calculator III"]},
    {"Toeplitz Matrix": ["Valid Word Square"]},
    {"Largest Plus Sign": ["Maximal Square"]},
    {"Special Binary String": ["Valid Parenthesis String"]},
    {"Find Anagram Mappings": []},
    {"Prime Number of Set Bits in Binary Representation": ["Number of 1 Bits"]},
    {"Set Intersection Size At Least Two": []},
    {"Bold Words in String": []},
    {"Pour Water": ["Trapping Rain Water"]},
    {"Employee Free Time": ["Merge Intervals", "Interval List Intersections"]},
    {"Pyramid Transition Matrix": []},
    {"Contain Virus": []},
    {"Cracking the Safe": []},
    {"Open the Lock": []},
    {"IP to CIDR": ["Restore IP Addresses", "Validate IP Address"]},
    {"Largest Number At Least Twice of Others": ["Keep Multiplying Found Values by Two", "Largest Number After Digit Swaps by Parity"]},
    {"Shortest Completing Word": []},
    {"Reach a Number": []},
    {"Number Of Corner Rectangles": []},
    {"Min Cost Climbing Stairs": ["Climbing Stairs"]},
    {"Cherry Pickup": ["Minimum Path Sum", "Dungeon Game", "Maximum Path Quality of a Graph"]},
    {"Network Delay Time": ["The Time When the Network Becomes Idle", "Second Minimum Time to Reach Destination"]},
    {"Find Smallest Letter Greater Than Target": ["Count Elements With Strictly Smaller and Greater Elements "]},
    {"Delete and Earn": ["House Robber"]},
    {"Daily Temperatures": ["Next Greater Element I", "Online Stock Span"]},
    {"Closest Leaf in a Binary Tree": []},
    {"Prefix and Suffix Search": ["Design Add and Search Words Data Structure"]},
    {"Sentence Similarity": ["Number of Provinces", "Accounts Merge", "Sentence Similarity II"]},
    {"My Calendar II": ["My Calendar I", "My Calendar III"]},
    {"Parse Lisp Expression": ["Ternary Expression Parser", "Number of Atoms", "Basic Calculator IV"]},
    {"Flood Fill": ["Island Perimeter"]},
    {"Monotone Increasing Digits": ["Remove K Digits"]},
    {"Asteroid Collision": ["Can Place Flowers", "Destroying Asteroids", "Count Collisions on a Road"]},
    {"My Calendar III": ["My Calendar I", "My Calendar II"]},
    {"Sentence Similarity II": ["Number of Provinces", "Accounts Merge", "Sentence Similarity"]},
    {"Minimum Window Subsequence": ["Minimum Window Substring", "Longest Continuous Increasing Subsequence"]},
    {"Find Pivot Index": ["Subarray Sum Equals K", "Find the Middle Index in Array", "Maximum Sum Score of Array"]},
    {"Count Different Palindromic Subsequences": ["Longest Palindromic Subsequence"]},
    {"Candy Crush": []},
    {"My Calendar I": ["My Calendar II", "My Calendar III"]},
    {"Self Dividing Numbers": ["Perfect Number"]},
    {"Number of Atoms": ["Decode String", "Encode String with Shortest Length", "Parse Lisp Expression"]},
    {"Split Linked List in Parts": ["Rotate List", "Odd Even Linked List"]},
    {"Max Stack": ["Min Stack"]},
    {"Find K-th Smallest Pair Distance": ["Find K Pairs with Smallest Sums", "Kth Smallest Element in a Sorted Matrix", "Find K Closest Elements", "Kth Smallest Number in Multiplication Table", "K-th Smallest Prime Fraction"]},
    {"Maximum Length of Repeated Subarray": ["Minimum Size Subarray Sum", "Longest Common Subpath"]},
    {"Range Module": ["Merge Intervals", "Insert Interval", "Data Stream as Disjoint Intervals"]},
    {"Accounts Merge": ["Redundant Connection", "Sentence Similarity", "Sentence Similarity II"]},
    {"Remove Comments": ["Mini Parser", "Ternary Expression Parser"]},
    {"Longest Word in Dictionary": ["Longest Word in Dictionary through Deleting", "Implement Magic Dictionary", "Longest Word With All Prefixes"]},
    {"1-bit and 2-bit Characters": ["Gray Code"]},
    {"Design Linked List": ["Design Skiplist"]},
    {"Subarray Product Less Than K": ["Maximum Product Subarray", "Maximum Size Subarray Sum Equals k", "Subarray Sum Equals K", "Two Sum Less Than K", "Number of Smooth Descent Periods of a Stock"]},
    {"Insert into a Sorted Circular Linked List": ["Insertion Sort List"]},
    {"Number of Distinct Islands II": ["Number of Distinct Islands"]},
    {"Minimum ASCII Delete Sum for Two Strings": ["Edit Distance", "Longest Increasing Subsequence", "Delete Operation for Two Strings"]},
    {"To Lower Case": ["Capitalize the Title"]},
    {"Random Pick with Blacklist": ["Random Pick Index", "Random Pick with Weight", "Find Unique Binary String"]},
    {"Best Time to Buy and Sell Stock with Transaction Fee": ["Best Time to Buy and Sell Stock II"]},
    {"Binary Search": ["Search in a Sorted Array of Unknown Size"]},
    {"Insert into a Binary Search Tree": ["Search in a Binary Search Tree"]},
    {"Design HashMap": ["Design HashSet", "Design Skiplist"]},
    {"Falling Squares": ["The Skyline Problem"]},
    {"Kth Largest Element in a Stream": ["Kth Largest Element in an Array", "Finding MK Average", "Sequentially Ordinal Rank Tracker"]},
    {"Search in a Binary Search Tree": ["Closest Binary Search Tree Value", "Insert into a Binary Search Tree"]},
    {"Design HashSet": ["Design HashMap", "Design Skiplist"]},
    {"Search in a Sorted Array of Unknown Size": ["Binary Search", "Find the Index of the Large Integer"]},
    {"Partition to K Equal Sum Subsets": ["Partition Equal Subset Sum", "Maximum Number of Ways to Partition an Array"]},
    {"Max Area of Island": ["Number of Islands", "Island Perimeter", "Largest Submatrix With Rearrangements", "Detonate the Maximum Bombs"]},
    {"Top K Frequent Words": ["Top K Frequent Elements", "K Closest Points to Origin", "Sort Features by Popularity"]},
    {"Degree of an Array": ["Maximum Subarray"]},
    {"Binary Number with Alternating Bits": ["Number of 1 Bits"]},
    {"Stickers to Spell Word": ["Ransom Note"]},
    {"Number of Distinct Islands": ["Number of Islands", "Number of Distinct Islands II", "Count Sub Islands"]},
    {"Count Binary Substrings": ["Encode and Decode Strings"]},
    {"Redundant Connection II": ["Redundant Connection"]},
    {"Repeated String Match": ["Repeated Substring Pattern"]},
    {"Maximum Sum of 3 Non-Overlapping Subarrays": ["Best Time to Buy and Sell Stock III"]},
    {"Employee Importance": ["Nested List Weight Sum"]},
    {"Redundant Connection": ["Redundant Connection II", "Accounts Merge", "Maximum Employees to Be Invited to a Meeting"]},
    {"Knight Probability in Chessboard": ["Out of Boundary Paths"]},
    {"Longest Univalue Path": ["Binary Tree Maximum Path Sum", "Count Univalue Subtrees", "Path Sum III", "Longest Path With Different Adjacent Characters"]},
    {"K Empty Slots": []},
    {"Valid Parenthesis String": ["Special Binary String", "Check if a Parentheses String Can Be Valid"]},
    {"Map Sum Pairs": ["Sort the Jumbled Numbers"]},
    {"Valid Palindrome II": ["Valid Palindrome", "Valid Palindrome III"]},
    {"24 Game": []},
    {"Next Closest Time": []},
    {"Cut Off Trees for Golf Event": []},
    {"Implement Magic Dictionary": ["Implement Trie (Prefix Tree)", "Longest Word in Dictionary"]},
    {"Baseball Game": ["Crawler Log Folder"]},
    {"Maximum Swap": ["Create Maximum Number"]},
    {"Second Minimum Node In a Binary Tree": ["Kth Smallest Element in a BST"]},
    {"Kth Smallest Number in Multiplication Table": ["Kth Smallest Element in a Sorted Matrix", "Find K-th Smallest Pair Distance", "K-th Smallest Prime Fraction"]},
    {"Bulb Switcher II": ["Bulb Switcher", "Number of Times Binary String Is Prefix-Aligned"]},
    {"Number of Longest Increasing Subsequence": ["Longest Increasing Subsequence", "Longest Continuous Increasing Subsequence"]},
    {"Beautiful Arrangement II": ["Beautiful Arrangement"]},
    {"Trim a Binary Search Tree": []},
    {"Longest Continuous Increasing Subsequence": ["Number of Longest Increasing Subsequence", "Minimum Window Subsequence"]},
    {"Strange Printer": ["Remove Boxes", "Strange Printer II"]},
    {"Image Smoother": []},
    {"Maximum Width of Binary Tree": []},
    {"Path Sum IV": ["Path Sum", "Path Sum II", "Binary Tree Maximum Path Sum", "Path Sum III"]},
    {"Non-decreasing Array": ["Find Good Days to Rob the Bank"]},
    {"Split Array into Consecutive Subsequences": ["Top K Frequent Elements", "Divide Array in Sets of K Consecutive Numbers"]},
    {"Remove 9": []},
    {"Equal Tree Partition": []},
    {"Two Sum IV - Input is a BST": ["Two Sum", "Two Sum II - Input Array Is Sorted", "Two Sum III - Data structure design", "Two Sum BSTs"]},
    {"Robot Return to Origin": ["Number of Provinces", "Execution of All Suffix Instructions Staying in a Grid"]},
    {"4 Keys Keyboard": ["2 Keys Keyboard"]},
    {"Print Binary Tree": []},
    {"Find K Closest Elements": ["Guess Number Higher or Lower", "Guess Number Higher or Lower II", "Find K-th Smallest Pair Distance", "Find Closest Number to Zero"]},
    {"Coin Path": ["House Robber", "House Robber II"]},
    {"Find Duplicate Subtrees": ["Serialize and Deserialize Binary Tree", "Serialize and Deserialize BST", "Construct String from Binary Tree", "Delete Duplicate Folders in System"]},
    {"Maximum Binary Tree": ["Maximum Binary Tree II"]},
    {"2 Keys Keyboard": ["4 Keys Keyboard", "Broken Calculator"]},
    {"Set Mismatch": ["Find the Duplicate Number"]},
    {"Dota2 Senate": ["Teemo Attacking"]},
    {"Replace Words": ["Implement Trie (Prefix Tree)"]},
    {"Palindromic Substrings": ["Longest Palindromic Substring", "Longest Palindromic Subsequence"]},
    {"Maximum Average Subarray II": ["Maximum Average Subarray I"]},
    {"Maximum Average Subarray I": ["Maximum Average Subarray II", "K Radius Subarray Averages"]},
    {"Maximum Length of Pair Chain": ["Longest Increasing Subsequence", "Increasing Subsequences"]},
    {"Average of Levels in Binary Tree": ["Binary Tree Level Order Traversal", "Binary Tree Level Order Traversal II"]},
    {"Design Circular Deque": ["Design Circular Queue", "Design Front Middle Back Queue"]},
    {"Exclusive Time of Functions": []},
    {"Design Log Storage System": ["Design In-Memory File System"]},
    {"Design Search Autocomplete System": ["Implement Trie (Prefix Tree)"]},
    {"Shopping Offers": []},
    {"Solve the Equation": ["Fraction Addition and Subtraction", "Minimize Result by Adding Parentheses to Expression"]},
    {"Decode Ways II": ["Decode Ways", "Number of Ways to Separate Numbers", "Number of Ways to Divide a Long Corridor"]},
    {"Course Schedule III": ["Course Schedule", "Course Schedule II", "Parallel Courses III"]},
    {"Smallest Range Covering Elements from K Lists": ["Minimum Window Substring"]},
    {"Sum of Square Numbers": ["Valid Perfect Square"]},
    {"Maximum Product of Three Numbers": ["Maximum Product Subarray"]},
    {"Find the Derangement of An Array": []},
    {"Design Excel Sum Formula": []},
    {"K Inverse Pairs Array": []},
    {"Swap Salary": []},
    {"Add One Row to Tree": []},
    {"Minimum Factorization": []},
    {"Exchange Seats": []},
    {"Not Boring Movies": []},
    {"Task Scheduler": ["Rearrange String k Distance Apart", "Reorganize String", "Maximum Number of Weeks for Which You Can Work"]},
    {"Design Circular Queue": ["Design Circular Deque", "Design Front Middle Back Queue"]},
    {"Biggest Single Number": []},
    {"Maximum Distance in Arrays": []},
    {"Average Salary: Departments VS Company": ["Countries You Can Safely Invest In"]},
    {"Add Bold Tag in String": ["Merge Intervals", "Tag Validator"]},
    {"Merge Two Binary Trees": []},
    {"Second Degree Follower": []},
    {"Shortest Distance in a Plane": []},
    {"Students Report By Geography": []},
    {"Shortest Distance in a Line": []},
    {"Valid Triangle Number": ["3Sum Smaller"]},
    {"Tree Node": []},
    {"Consecutive Available Seats": []},
    {"Triangle Judgement": []},
    {"Sales Person": []},
    {"Design Compressed String Iterator": ["LRU Cache", "String Compression"]},
    {"Find Duplicate File in System": ["Delete Duplicate Folders in System"]},
    {"Can Place Flowers": ["Teemo Attacking", "Asteroid Collision"]},
    {"Construct String from Binary Tree": ["Construct Binary Tree from String", "Find Duplicate Subtrees"]},
    {"Friend Requests II: Who Has the Most Friends": []},
    {"Non-negative Integers without Consecutive Ones": ["House Robber", "House Robber II", "Ones and Zeroes"]},
    {"Big Countries": []},
    {"Range Addition II": ["Range Addition"]},
    {"Friend Requests I: Overall Acceptance Rate": []},
    {"Classes More Than 5 Students": []},
    {"Minimum Index Sum of Two Lists": ["Intersection of Two Linked Lists"]},
    {"Human Traffic of Stadium": []},
    {"Longest Harmonious Subsequence": []},
    {"Design In-Memory File System": ["LRU Cache", "LFU Cache", "Design Log Storage System"]},
    {"N-ary Tree Preorder Traversal": ["Binary Tree Preorder Traversal", "N-ary Tree Level Order Traversal", "N-ary Tree Postorder Traversal"]},
    {"Erect the Fence": ["Erect the Fence II"]},
    {"Valid Square": []},
    {"N-ary Tree Postorder Traversal": ["Binary Tree Postorder Traversal", "N-ary Tree Level Order Traversal", "N-ary Tree Preorder Traversal"]},
    {"Fraction Addition and Subtraction": ["Solve the Equation"]},
    {"Tag Validator": ["Add Bold Tag in String"]},
    {"Find Cumulative Salary of an Employee": []},
    {"Find Customer Referee": []},
    {"Customer Placing the Largest Number of Orders": []},
    {"Investments in 2016": []},
    {"Count Student Number in Departments": []},
    {"Shortest Unsorted Continuous Subarray": []},
    {"Kill Process": []},
    {"Delete Operation for Two Strings": ["Edit Distance", "Minimum ASCII Delete Sum for Two Strings", "Longest Common Subsequence"]},
    {"Find Median Given Frequency of Numbers": ["Median Employee Salary"]},
    {"Subtree of Another Tree": ["Count Univalue Subtrees", "Most Frequent Subtree Sum"]},
    {"Employee Bonus": ["Combine Two Tables"]},
    {"Squirrel Simulation": []},
    {"Winning Candidate": []},
    {"Distribute Candies": []},
    {"Get Highest Answer Rate Question": []},
    {"Out of Boundary Paths": ["Knight Probability in Chessboard", "Execution of All Suffix Instructions Staying in a Grid"]},
    {"Permutation in String": ["Minimum Window Substring", "Find All Anagrams in a String"]},
    {"Binary Tree Tilt": ["Find All The Lonely Nodes"]},
    {"Maximum Vacation Days": ["Cheapest Flights Within K Stops"]},
    {"Median Employee Salary": ["Find Median Given Frequency of Numbers"]},
    {"Find the Closest Palindrome": ["Find Palindrome With Fixed Length", "Next Palindrome Using Same Digits"]},
    {"Managers with at Least 5 Direct Reports": []},
    {"Reshape the Matrix": ["Convert 1D Array Into 2D Array"]},
    {"Array Nesting": ["Nested List Weight Sum", "Flatten Nested List Iterator", "Nested List Weight Sum II"]},
    {"Subarray Sum Equals K": ["Two Sum", "Continuous Subarray Sum", "Subarray Product Less Than K", "Find Pivot Index", "Subarray Sums Divisible by K", "Minimum Operations to Reduce X to Zero", "K Radius Subarray Averages", "Maximum Sum Score of Array"]},
    {"Array Partition I": ["Minimum Difference Between Highest and Lowest of K Scores", "Minimum Cost of Buying Candies With Discount", "All Divisions With the Highest Score of a Binary Array"]},
    {"Logical OR of Two Binary Grids Represented as Quad-Trees": []},
    {"Maximum Depth of N-ary Tree": ["Maximum Depth of Binary Tree", "The Time When the Network Becomes Idle"]},
    {"Reverse Words in a String III": ["Reverse String II"]},
    {"Next Greater Element III": ["Next Greater Element I", "Next Greater Element II", "Next Palindrome Using Same Digits"]},
    {"Split Concatenated Strings": []},
    {"Longest Line of Consecutive One in Matrix": []},
    {"Game Play Analysis IV": ["Game Play Analysis III", "Game Play Analysis V"]},
    {"Binary Tree Longest Consecutive Sequence II": ["Binary Tree Longest Consecutive Sequence", "Check if an Array Is Consecutive"]},
    {"Split Array with Equal Sum": ["Number of Ways to Split a String"]},
    {"Student Attendance Record II": ["Student Attendance Record I"]},
    {"Brick Wall": ["Number of Ways to Build Sturdy Brick Wall"]},
    {"Remove Boxes": ["Strange Printer", "Number of Unique Flavors After Sharing K Candies"]},
    {"Boundary of Binary Tree": ["Binary Tree Right Side View"]},
    {"Output Contest Matches": []},
    {"Diameter of Binary Tree": ["Diameter of N-Ary Tree", "Longest Path With Different Adjacent Characters"]},
    {"01 Matrix": ["Shortest Path to Get Food", "Minimum Operations to Remove Adjacent Ones in Matrix"]},
    {"Optimal Division": []},
    {"Student Attendance Record I": ["Student Attendance Record II"]},
    {"Number of Provinces": ["Number of Connected Components in an Undirected Graph", "Robot Return to Origin", "Sentence Similarity", "Sentence Similarity II", "The Earliest Moment When Everyone Become Friends", "Detonate the Maximum Bombs"]},
    {"Reverse String II": ["Reverse String", "Reverse Words in a String III"]},
    {"Single Element in a Sorted Array": []},
    {"Minimum Time Difference": ["Minimum Cost to Set Cooking Time"]},
    {"Convert BST to Greater Tree": []},
    {"Complex Number Multiplication": []},
    {"Construct Binary Tree from String": ["Construct String from Binary Tree"]},
    {"Encode and Decode TinyURL": []},
    {"Game Play Analysis III": ["Game Play Analysis II", "Game Play Analysis IV"]},
    {"Lonely Pixel II": ["Lonely Pixel I"]},
    {"K-diff Pairs in an Array": ["Minimum Absolute Difference in BST", "Count Number of Pairs With Absolute Difference K", "Kth Smallest Product of Two Sorted Arrays"]},
    {"Lonely Pixel I": ["Lonely Pixel II"]},
    {"Minimum Absolute Difference in BST": ["K-diff Pairs in an Array"]},
    {"Minesweeper": ["Detonate the Maximum Bombs"]},
    {"Random Pick with Weight": ["Random Pick Index", "Random Pick with Blacklist", "Random Point in Non-overlapping Rectangles"]},
    {"Word Abbreviation": ["Valid Word Abbreviation", "Minimum Unique Word Abbreviation"]},
    {"Beautiful Arrangement": ["Beautiful Arrangement II"]},
    {"Contiguous Array": ["Maximum Size Subarray Sum Equals k"]},
    {"Longest Word in Dictionary through Deleting": ["Longest Word in Dictionary"]},
    {"Continuous Subarray Sum": ["Subarray Sum Equals K", "Minimum Number of Operations to Make Array Continuous", "Intervals Between Identical Elements"]},
    {"Longest Uncommon Subsequence II": ["Longest Uncommon Subsequence I"]},
    {"Longest Uncommon Subsequence I": ["Longest Uncommon Subsequence II"]},
    {"Detect Capital": ["Capitalize the Title"]},
    {"Random Flip Matrix": []},
    {"Coin Change 2": ["Maximum Value of K Coins From Piles"]},
    {"Super Washing Machines": []},
    {"Longest Palindromic Subsequence": ["Longest Palindromic Substring", "Palindromic Substrings", "Count Different Palindromic Subsequences", "Longest Common Subsequence", "Longest Palindromic Subsequence II", "Maximize Palindrome Length From Subsequences", "Maximum Product of the Length of Two Palindromic Subsequences"]},
    {"Find Largest Value in Each Tree Row": []},
    {"Freedom Trail": []},
    {"Find Bottom Left Tree Value": []},
    {"Game Play Analysis II": ["Game Play Analysis I", "Game Play Analysis III"]},
    {"Game Play Analysis I": ["Game Play Analysis II"]},
    {"Inorder Successor in BST II": ["Inorder Successor in BST"]},
    {"Fibonacci Number": ["Climbing Stairs", "Split Array into Fibonacci Sequence", "Length of Longest Fibonacci Subsequence", "N-th Tribonacci Number"]},
    {"Most Frequent Subtree Sum": ["Subtree of Another Tree", "Count Nodes Equal to Sum of Descendants"]},
    {"Perfect Number": ["Self Dividing Numbers"]},
    {"Relative Ranks": []},
    {"The Maze II": ["The Maze", "The Maze III"]},
    {"Base 7": []},
    {"Next Greater Element II": ["Next Greater Element I", "Next Greater Element III"]},
    {"IPO": []},
    {"Find Mode in Binary Search Tree": ["Validate Binary Search Tree"]},
    {"Keyboard Row": []},
    {"The Maze III": ["The Maze", "The Maze II"]},
    {"Diagonal Traverse": ["Decode the Slanted Ciphertext"]},
    {"Random Point in Non-overlapping Rectangles": ["Random Pick with Weight", "Generate Random Point in a Circle"]},
    {"Next Greater Element I": ["Next Greater Element II", "Next Greater Element III", "Daily Temperatures", "Sum of Subarray Ranges"]},
    {"Teemo Attacking": ["Merge Intervals", "Can Place Flowers", "Dota2 Senate"]},
    {"Target Sum": ["Expression Add Operators"]},
    {"Reverse Pairs": ["Count of Smaller Numbers After Self", "Count of Range Sum"]},
    {"Construct the Rectangle": []},
    {"Increasing Subsequences": ["Maximum Length of Pair Chain"]},
    {"The Maze": ["The Maze III", "The Maze II"]},
    {"Robot Room Cleaner": ["Walls and Gates", "Shortest Path in a Hidden Grid", "Minimum Path Cost in a Hidden Grid", "Number of Spaces Cleaning Robot Cleaned"]},
    {"Zuma Game": []},
    {"Max Consecutive Ones II": ["Max Consecutive Ones", "Max Consecutive Ones III", "All Divisions With the Highest Score of a Binary Array"]},
    {"Predict the Winner": ["Can I Win"]},
    {"Max Consecutive Ones": ["Max Consecutive Ones II", "Max Consecutive Ones III", "Consecutive Characters", "Longer Contiguous Segments of Ones than Zeros"]},
    {"Find Permutation": []},
    {"Smallest Good Base": []},
    {"License Key Formatting": []},
    {"Magical String": []},
    {"Sliding Window Median": ["Find Median from Data Stream"]},
    {"Largest Palindrome Product": []},
    {"Generate Random Point in a Circle": ["Random Point in Non-overlapping Rectangles"]},
    {"Total Hamming Distance": ["Hamming Distance"]},
    {"Number Complement": []},
    {"Heaters": []},
    {"Ones and Zeroes": ["Count Subarrays With More Ones Than Zeros", "Non-negative Integers without Consecutive Ones", "All Divisions With the Highest Score of a Binary Array"]},
    {"Matchsticks to Square": []},
    {"Concatenated Words": ["Word Break II"]},
    {"Encode String with Shortest Length": ["Decode String", "Number of Atoms"]},
    {"Implement Rand10() Using Rand7()": []},
    {"Convex Polygon": []},
    {"Validate IP Address": ["IP to CIDR"]},
    {"Unique Substrings in Wraparound String": []},
    {"Count The Repetitions": []},
    {"Optimal Account Balancing": []},
    {"Can I Win": ["Flip Game II", "Guess Number Higher or Lower II", "Predict the Winner"]},
    {"Island Perimeter": ["Max Area of Island", "Flood Fill", "Coloring A Border"]},
    {"Minimum Moves to Equal Array Elements II": ["Best Meeting Point", "Minimum Moves to Equal Array Elements", "Minimum Operations to Make a Uni-Value Grid", "Removing Minimum Number of Magic Beans"]},
    {"Hamming Distance": ["Number of 1 Bits", "Total Hamming Distance"]},
    {"LFU Cache": ["LRU Cache", "Design In-Memory File System"]},
    {"Repeated Substring Pattern": ["Implement strStr()", "Repeated String Match"]},
    {"Poor Pigs": []},
    {"Circular Array Loop": []},
    {"132 Pattern": []},
    {"Assign Cookies": []},
    {"4Sum II": ["4Sum"]},
    {"Minimum Moves to Equal Array Elements": ["Minimum Moves to Equal Array Elements II", "Maximum Running Time of N Computers", "Pour Water Between Buckets to Make Water Levels Equal"]},
    {"Minimum Number of Arrows to Burst Balloons": ["Meeting Rooms II", "Non-overlapping Intervals"]},
    {"Sort Characters By Frequency": ["Top K Frequent Elements", "First Unique Character in a String", "Sort Array by Increasing Frequency"]},
    {"Delete Node in a BST": ["Split BST"]},
    {"Serialize and Deserialize BST": ["Serialize and Deserialize Binary Tree", "Find Duplicate Subtrees", "Serialize and Deserialize N-ary Tree"]},
    {"Find All Numbers Disappeared in an Array": ["First Missing Positive", "Find All Duplicates in an Array", "Find Unique Binary String", "Append K Integers With Minimal Sum"]},
    {"Number of Boomerangs": ["Line Reflection"]},
    {"Arithmetic Slices II - Subsequence": ["Arithmetic Slices"]},
    {"Add Two Numbers II": ["Add Two Numbers", "Add Two Polynomials Represented as Linked Lists"]},
    {"Sequence Reconstruction": ["Course Schedule II"]},
    {"String Compression": ["Count and Say", "Encode and Decode Strings", "Design Compressed String Iterator", "Decompress Run-Length Encoded List"]},
    {"Find All Duplicates in an Array": ["Find All Numbers Disappeared in an Array"]},
    {"Arranging Coins": []},
    {"K-th Smallest in Lexicographical Order": []},
    {"Ternary Expression Parser": ["Mini Parser", "Remove Comments", "Parse Lisp Expression"]},
    {"Find All Anagrams in a String": ["Valid Anagram", "Permutation in String"]},
    {"Path Sum III": ["Path Sum", "Path Sum II", "Path Sum IV", "Longest Univalue Path"]},
    {"Find Right Interval": ["Data Stream as Disjoint Intervals"]},
    {"Non-overlapping Intervals": ["Minimum Number of Arrows to Burst Balloons"]},
    {"Number of Segments in a String": []},
    {"Minimum Genetic Mutation": ["Word Ladder"]},
    {"All O`one Data Structure": []},
    {"Encode N-ary Tree to Binary Tree": ["Serialize and Deserialize N-ary Tree"]},
    {"Flatten a Multilevel Doubly Linked List": ["Flatten Binary Tree to Linked List", "Correct a Binary Tree"]},
    {"N-ary Tree Level Order Traversal": ["Binary Tree Level Order Traversal", "N-ary Tree Preorder Traversal", "N-ary Tree Postorder Traversal", "The Time When the Network Becomes Idle"]},
    {"Serialize and Deserialize N-ary Tree": ["Serialize and Deserialize Binary Tree", "Serialize and Deserialize BST", "Encode N-ary Tree to Binary Tree"]},
    {"Construct Quad Tree": []},
    {"Convert Binary Search Tree to Sorted Doubly Linked List": ["Binary Tree Inorder Traversal"]},
    {"Word Squares": ["Valid Word Square"]},
    {"Longest Repeating Character Replacement": ["Longest Substring with At Most K Distinct Characters", "Max Consecutive Ones III", "Minimum Number of Operations to Make Array Continuous", "Maximize the Confusion of an Exam", "Longest Substring of One Repeating Character"]},
    {"Reconstruct Original Digits from English": []},
    {"Valid Word Square": ["Word Squares", "Toeplitz Matrix"]},
    {"Maximum XOR of Two Numbers in an Array": ["Maximum XOR With an Element From Array"]},
    {"Strong Password Checker": []},
    {"Battleships in a Board": []},
    {"Sentence Screen Fitting": ["Minimum Cost to Separate Sentence Into Rows"]},
    {"Pacific Atlantic Water Flow": []},
    {"Partition Equal Subset Sum": ["Partition to K Equal Sum Subsets", "Minimize the Difference Between Target and Chosen Elements", "Maximum Number of Ways to Partition an Array", "Partition Array Into Two Arrays to Minimize Sum Difference"]},
    {"Add Strings": ["Add Two Numbers", "Multiply Strings", "Add to Array-Form of Integer"]},
    {"Third Maximum Number": ["Kth Largest Element in an Array"]},
    {"Arithmetic Slices": ["Arithmetic Slices II - Subsequence", "Arithmetic Subarrays"]},
    {"Fizz Buzz": ["Fizz Buzz Multithreaded"]},
    {"Minimum Unique Word Abbreviation": ["Generalized Abbreviation", "Valid Word Abbreviation", "Word Abbreviation"]},
    {"Split Array Largest Sum": ["Capacity To Ship Packages Within D Days", "Divide Chocolate", "Subsequence of Size K With the Largest Even Sum", "Maximum Total Beauty of the Gardens"]},
    {"Longest Palindrome": ["Palindrome Permutation", "Longest Palindrome by Concatenating Two Letter Words"]},
    {"Valid Word Abbreviation": ["Minimum Unique Word Abbreviation", "Word Abbreviation", "Check if an Original String Exists Given Two Encoded Strings"]},
    {"Trapping Rain Water II": ["Trapping Rain Water"]},
    {"Queue Reconstruction by Height": ["Count of Smaller Numbers After Self"]},
    {"Convert a Number to Hexadecimal": []},
    {"Sum of Left Leaves": []},
    {"Frog Jump": ["Minimum Sideway Jumps", "Solving Questions With Brainpower"]},
    {"Remove K Digits": ["Create Maximum Number", "Monotone Increasing Digits", "Find the Most Competitive Subsequence", "Append K Integers With Minimal Sum"]},
    {"Binary Watch": ["Letter Combinations of a Phone Number", "Number of 1 Bits"]},
    {"Nth Digit": []},
    {"Evaluate Division": []},
    {"Random Pick Index": ["Linked List Random Node", "Random Pick with Blacklist", "Random Pick with Weight"]},
    {"Integer Replacement": []},
    {"Rotate Function": []},
    {"Longest Substring with At Least K Repeating Characters": ["Longest Subsequence Repeated k Times", "Number of Equal Count Substrings"]},
    {"Decode String": ["Encode String with Shortest Length", "Number of Atoms", "Brace Expansion"]},
    {"UTF-8 Validation": []},
    {"Is Subsequence": ["Number of Matching Subsequences", "Shortest Way to Form String"]},
    {"Perfect Rectangle": []},
    {"Elimination Game": []},
    {"Find the Difference": ["Single Number"]},
    {"Longest Absolute File Path": []},
    {"First Unique Character in a String": ["Sort Characters By Frequency"]},
    {"Lexicographical Numbers": []},
    {"Mini Parser": ["Flatten Nested List Iterator", "Ternary Expression Parser", "Remove Comments"]},
    {"Shuffle an Array": []},
    {"Ransom Note": ["Stickers to Spell Word"]},
    {"Linked List Random Node": ["Random Pick Index"]},
    {"Insert Delete GetRandom O(1) - Duplicates allowed": ["Insert Delete GetRandom O(1)"]},
    {"Insert Delete GetRandom O(1)": ["Insert Delete GetRandom O(1) - Duplicates allowed"]},
    {"Design Phone Directory": ["Seat Reservation Manager"]},
    {"Kth Smallest Element in a Sorted Matrix": ["Find K Pairs with Smallest Sums", "Kth Smallest Number in Multiplication Table", "Find K-th Smallest Pair Distance", "K-th Smallest Prime Fraction"]},
    {"Combination Sum IV": ["Combination Sum"]},
    {"Wiggle Subsequence": ["Rearrange Array Elements by Sign"]},
    {"Guess Number Higher or Lower II": ["Flip Game II", "Guess Number Higher or Lower", "Can I Win", "Find K Closest Elements"]},
    {"Guess Number Higher or Lower": ["First Bad Version", "Guess Number Higher or Lower II", "Find K Closest Elements"]},
    {"Find K Pairs with Smallest Sums": ["Kth Smallest Element in a Sorted Matrix", "Find K-th Smallest Pair Distance", "Kth Smallest Product of Two Sorted Arrays"]},
    {"Super Pow": ["Pow(x, n)"]},
    {"Sum of Two Integers": ["Add Two Numbers"]},
    {"Range Addition": ["Range Addition II", "Count Positions on Street With Required Brightness"]},
    {"Plus One Linked List": ["Plus One"]},
    {"Largest Divisible Subset": []},
    {"Valid Perfect Square": ["Sqrt(x)", "Sum of Square Numbers"]},
    {"Find Leaves of Binary Tree": []},
    {"Water and Jug Problem": []},
    {"Nested List Weight Sum II": ["Nested List Weight Sum", "Array Nesting"]},
    {"Max Sum of Rectangle No Larger Than K": []},
    {"Design Hit Counter": ["Logger Rate Limiter"]},
    {"Bomb Enemy": ["Minimum Cost Homecoming of a Robot in a Grid", "Stamping the Grid", "Maximum Trailing Zeros in a Cornered Path"]},
    {"Sort Transformed Array": ["Squares of a Sorted Array"]},
    {"Logger Rate Limiter": ["Design Hit Counter"]},
    {"Rearrange String k Distance Apart": ["Task Scheduler", "Reorganize String", "Construct String With Repeat Limit"]},
    {"Count Numbers with Unique Digits": []},
    {"Line Reflection": ["Max Points on a Line", "Number of Boomerangs"]},
    {"Design Twitter": ["Design a File Sharing System"]},
    {"Russian Doll Envelopes": ["Longest Increasing Subsequence", "The Number of Weak Characters in the Game"]},
    {"Design Snake Game": []},
    {"Data Stream as Disjoint Intervals": ["Summary Ranges", "Find Right Interval", "Range Module"]},
    {"Android Unlock Patterns": []},
    {"Intersection of Two Arrays II": ["Intersection of Two Arrays", "Find Common Characters", "Find the Difference of Two Arrays", "Choose Numbers From Two Arrays in Range", "Intersection of Multiple Arrays"]},
    {"Intersection of Two Arrays": ["Intersection of Two Arrays II", "Intersection of Three Sorted Arrays", "Find the Difference of Two Arrays", "Count Common Words With One Occurrence", "Choose Numbers From Two Arrays in Range", "Intersection of Multiple Arrays"]},
    {"Design Tic-Tac-Toe": ["Valid Tic-Tac-Toe State"]},
    {"Top K Frequent Elements": ["Word Frequency", "Kth Largest Element in an Array", "Sort Characters By Frequency", "Split Array into Consecutive Subsequences", "Top K Frequent Words", "K Closest Points to Origin", "Sort Features by Popularity"]},
    {"Moving Average from Data Stream": ["K Radius Subarray Averages"]},
    {"Reverse Vowels of a String": ["Reverse String", "Remove Vowels from a String"]},
    {"Reverse String": ["Reverse Vowels of a String", "Reverse String II"]},
    {"Integer Break": ["Maximize Number of Nice Divisors"]},
    {"Power of Four": ["Power of Two", "Power of Three"]},
    {"Flatten Nested List Iterator": ["Flatten 2D Vector", "Zigzag Iterator", "Mini Parser", "Array Nesting"]},
    {"Longest Substring with At Most K Distinct Characters": ["Longest Substring Without Repeating Characters", "Longest Substring with At Most Two Distinct Characters", "Longest Repeating Character Replacement", "Subarrays with K Different Integers", "Max Consecutive Ones III", "Maximize the Confusion of an Exam"]},
    {"Nested List Weight Sum": ["Nested List Weight Sum II", "Array Nesting", "Employee Importance"]},
    {"Counting Bits": ["Number of 1 Bits"]},
    {"House Robber III": ["House Robber", "House Robber II"]},
    {"Palindrome Pairs": ["Longest Palindromic Substring", "Shortest Palindrome", "Longest Palindrome by Concatenating Two Letter Words"]},
    {"Self Crossing": []},
    {"Increasing Triplet Subsequence": ["Longest Increasing Subsequence", "Count Special Quadruplets", "Count Good Triplets in an Array"]},
    {"Largest BST Subtree": []},
    {"Reconstruct Itinerary": ["Longest Common Subpath", "Valid Arrangement of Pairs"]},
    {"Verify Preorder Serialization of a Binary Tree": []},
    {"Patching Array": ["Maximum Number of Consecutive Values You Can Make"]},
    {"Longest Increasing Path in a Matrix": []},
    {"Odd Even Linked List": ["Split Linked List in Parts"]},
    {"Count of Range Sum": ["Count of Smaller Numbers After Self", "Reverse Pairs"]},
    {"Power of Three": ["Power of Two", "Power of Four", "Check if Number is a Sum of Powers of Three"]},
    {"Maximum Size Subarray Sum Equals k": ["Minimum Size Subarray Sum", "Range Sum Query - Immutable", "Contiguous Array", "Subarray Product Less Than K"]},
    {"Wiggle Sort II": ["Sort Colors", "Kth Largest Element in an Array", "Wiggle Sort", "Array With Elements Not Equal to Average of Neighbors"]},
    {"Number of Connected Components in an Undirected Graph": ["Number of Islands", "Graph Valid Tree", "Number of Provinces", "Paths in Maze That Lead to Same Room"]},
    {"Coin Change": ["Minimum Cost For Tickets", "Maximum Value of K Coins From Piles", "Minimum Number of Operations to Convert Time"]},
    {"Create Maximum Number": ["Remove K Digits", "Maximum Swap"]},
    {"Generalized Abbreviation": ["Subsets", "Unique Word Abbreviation", "Minimum Unique Word Abbreviation"]},
    {"Bulb Switcher": ["Bulb Switcher II", "Minimum Number of K Consecutive Bit Flips", "Number of Times Binary String Is Prefix-Aligned"]},
    {"Maximum Product of Word Lengths": []},
    {"Shortest Distance from All Buildings": ["Walls and Gates", "Best Meeting Point", "As Far from Land as Possible"]},
    {"Remove Duplicate Letters": ["Smallest K-Length Subsequence With Occurrences of a Letter"]},
    {"Count of Smaller Numbers After Self": ["Count of Range Sum", "Queue Reconstruction by Height", "Reverse Pairs", "How Many Numbers Are Smaller Than the Current Number", "Count Good Triplets in an Array"]},
    {"Binary Tree Vertical Order Traversal": ["Binary Tree Level Order Traversal"]},
    {"Super Ugly Number": ["Ugly Number II"]},
    {"Burst Balloons": ["Minimum Cost to Merge Stones"]},
    {"Sparse Matrix Multiplication": []},
    {"Minimum Height Trees": ["Course Schedule", "Course Schedule II"]},
    {"Best Time to Buy and Sell Stock with Cooldown": ["Best Time to Buy and Sell Stock", "Best Time to Buy and Sell Stock II"]},
    {"Range Sum Query 2D - Mutable": ["Range Sum Query 2D - Immutable", "Range Sum Query - Mutable"]},
    {"Range Sum Query - Mutable": ["Range Sum Query - Immutable", "Range Sum Query 2D - Mutable"]},
    {"Additive Number": ["Split Array into Fibonacci Sequence"]},
    {"Number of Islands II": ["Number of Islands", "Process Restricted Friend Requests"]},
    {"Range Sum Query 2D - Immutable": ["Range Sum Query - Immutable", "Range Sum Query 2D - Mutable"]},
    {"Range Sum Query - Immutable": ["Range Sum Query 2D - Immutable", "Range Sum Query - Mutable", "Maximum Size Subarray Sum Equals k"]},
    {"Smallest Rectangle Enclosing Black Pixels": []},
    {"Remove Invalid Parentheses": ["Valid Parentheses", "Minimum Number of Swaps to Make the String Balanced"]},
    {"Longest Increasing Subsequence": ["Increasing Triplet Subsequence", "Russian Doll Envelopes", "Maximum Length of Pair Chain", "Number of Longest Increasing Subsequence", "Minimum ASCII Delete Sum for Two Strings", "Minimum Number of Removals to Make Mountain Array", "Find the Longest Valid Obstacle Course at Each Position", "Minimum Operations to Make the Array K-Increasing"]},
    {"Bulls and Cows": []},
    {"Binary Tree Longest Consecutive Sequence": ["Longest Consecutive Sequence", "Binary Tree Longest Consecutive Sequence II", "Check if an Array Is Consecutive"]},
    {"Serialize and Deserialize Binary Tree": ["Encode and Decode Strings", "Serialize and Deserialize BST", "Find Duplicate Subtrees", "Serialize and Deserialize N-ary Tree"]},
    {"Best Meeting Point": ["Shortest Distance from All Buildings", "Minimum Moves to Equal Array Elements II"]},
    {"Find Median from Data Stream": ["Sliding Window Median", "Finding MK Average", "Sequentially Ordinal Rank Tracker"]},
    {"Flip Game II": ["Nim Game", "Flip Game", "Guess Number Higher or Lower II", "Can I Win"]},
    {"Flip Game": ["Flip Game II"]},
    {"Nim Game": ["Flip Game II"]},
    {"Word Pattern II": ["Word Pattern"]},
    {"Word Pattern": ["Isomorphic Strings", "Word Pattern II"]},
    {"Game of Life": ["Set Matrix Zeroes"]},
    {"Unique Word Abbreviation": ["Two Sum III - Data structure design", "Generalized Abbreviation"]},
    {"Find the Duplicate Number": ["First Missing Positive", "Single Number", "Linked List Cycle II", "Missing Number", "Set Mismatch"]},
    {"Walls and Gates": ["Surrounded Regions", "Number of Islands", "Shortest Distance from All Buildings", "Robot Room Cleaner", "Rotting Oranges"]},
    {"Inorder Successor in BST": ["Binary Tree Inorder Traversal", "Binary Search Tree Iterator", "Inorder Successor in BST II"]},
    {"Peeking Iterator": ["Binary Search Tree Iterator", "Flatten 2D Vector", "Zigzag Iterator"]},
    {"Move Zeroes": ["Remove Element"]},
    {"Expression Add Operators": ["Evaluate Reverse Polish Notation", "Basic Calculator", "Basic Calculator II", "Different Ways to Add Parentheses", "Target Sum"]},
    {"Zigzag Iterator": ["Binary Search Tree Iterator", "Flatten 2D Vector", "Peeking Iterator", "Flatten Nested List Iterator", "Merge Strings Alternately"]},
    {"Wiggle Sort": ["Sort Colors", "Wiggle Sort II", "Array With Elements Not Equal to Average of Neighbors"]},
    {"Perfect Squares": ["Count Primes", "Ugly Number II"]},
    {"First Bad Version": ["Find First and Last Position of Element in Sorted Array", "Search Insert Position", "Guess Number Higher or Lower"]},
    {"Find the Celebrity": ["Find the Town Judge"]},
    {"Paint Fence": ["House Robber", "House Robber II", "Paint House", "Paint House II"]},
    {"H-Index II": ["H-Index"]},
    {"H-Index": ["H-Index II"]},
    {"Integer to English Words": ["Integer to Roman"]},
    {"Closest Binary Search Tree Value II": ["Binary Tree Inorder Traversal", "Closest Binary Search Tree Value"]},
    {"Encode and Decode Strings": ["Count and Say", "Serialize and Deserialize Binary Tree", "String Compression", "Count Binary Substrings"]},
    {"Closest Binary Search Tree Value": ["Count Complete Tree Nodes", "Closest Binary Search Tree Value II", "Search in a Binary Search Tree"]},
    {"Alien Dictionary": ["Course Schedule II"]},
    {"Missing Number": ["First Missing Positive", "Single Number", "Find the Duplicate Number", "Couples Holding Hands", "Find Unique Binary String"]},
    {"Palindrome Permutation II": ["Next Permutation", "Permutations II", "Palindrome Permutation"]},
    {"Palindrome Permutation": ["Longest Palindromic Substring", "Valid Anagram", "Palindrome Permutation II", "Longest Palindrome"]},
    {"Paint House II": ["Product of Array Except Self", "Sliding Window Maximum", "Paint House", "Paint Fence"]},
    {"Ugly Number II": ["Merge k Sorted Lists", "Count Primes", "Ugly Number", "Perfect Squares", "Super Ugly Number", "Ugly Number III"]},
    {"Ugly Number": ["Happy Number", "Count Primes", "Ugly Number II"]},
    {"Trips and Users": ["Hopper Company Queries I", "Hopper Company Queries II", "Hopper Company Queries III"]},
    {"Graph Valid Tree": ["Course Schedule", "Number of Connected Components in an Undirected Graph", "Keys and Rooms"]},
    {"Single Number III": ["Single Number", "Single Number II"]},
    {"3Sum Smaller": ["3Sum", "3Sum Closest", "Valid Triangle Number", "Two Sum Less Than K"]},
    {"Add Digits": ["Happy Number", "Sum of Digits in the Minimum Number", "Sum of Digits of String After Convert", "Minimum Sum of Four Digit Number After Splitting Digits", "Calculate Digit Sum of a String"]},
    {"Binary Tree Paths": ["Path Sum II", "Smallest String Starting From Leaf", "Step-By-Step Directions From a Binary Tree Node to Another"]},
    {"Paint House": ["House Robber", "House Robber II", "Paint House II", "Paint Fence"]},
    {"Verify Preorder Sequence in Binary Search Tree": ["Binary Tree Preorder Traversal"]},
    {"Factor Combinations": ["Combination Sum"]},
    {"Meeting Rooms II": ["Merge Intervals", "Meeting Rooms", "Minimum Number of Arrows to Burst Balloons", "Car Pooling", "Number of Flowers in Full Bloom"]},
    {"Meeting Rooms": ["Merge Intervals", "Meeting Rooms II"]},
    {"Flatten 2D Vector": ["Binary Search Tree Iterator", "Zigzag Iterator", "Peeking Iterator", "Flatten Nested List Iterator"]},
    {"Count Univalue Subtrees": ["Subtree of Another Tree", "Longest Univalue Path"]},
    {"Group Shifted Strings": ["Group Anagrams"]},
    {"Strobogrammatic Number III": ["Strobogrammatic Number", "Strobogrammatic Number II"]},
    {"Strobogrammatic Number II": ["Strobogrammatic Number", "Strobogrammatic Number III", "Sum of k-Mirror Numbers"]},
    {"Strobogrammatic Number": ["Strobogrammatic Number II", "Strobogrammatic Number III", "Confusing Number"]},
    {"Shortest Word Distance III": ["Shortest Word Distance", "Shortest Word Distance II"]},
    {"Shortest Word Distance II": ["Merge Two Sorted Lists", "Shortest Word Distance", "Shortest Word Distance III"]},
    {"Shortest Word Distance": ["Shortest Word Distance II", "Shortest Word Distance III", "Find All K-Distant Indices in an Array"]},
    {"Valid Anagram": ["Group Anagrams", "Palindrome Permutation", "Find All Anagrams in a String"]},
    {"Different Ways to Add Parentheses": ["Unique Binary Search Trees II", "Basic Calculator", "Expression Add Operators", "The Score of Students Solving Math Expression", "Minimize Result by Adding Parentheses to Expression"]},
    {"Search a 2D Matrix II": ["Search a 2D Matrix"]},
    {"Sliding Window Maximum": ["Minimum Window Substring", "Min Stack", "Longest Substring with At Most Two Distinct Characters", "Paint House II", "Jump Game VI"]},
    {"Product of Array Except Self": ["Trapping Rain Water", "Maximum Product Subarray", "Paint House II", "Minimum Difference in Sums After Removal of Elements"]},
    {"Delete Node in a Linked List": ["Remove Linked List Elements"]},
    {"Lowest Common Ancestor of a Binary Tree": ["Lowest Common Ancestor of a Binary Search Tree", "Smallest Common Region", "Find Players With Zero or One Losses", "Lowest Common Ancestor of a Binary Tree II", "Lowest Common Ancestor of a Binary Tree III", "Lowest Common Ancestor of a Binary Tree IV", "Step-By-Step Directions From a Binary Tree Node to Another"]},
    {"Lowest Common Ancestor of a Binary Search Tree": ["Lowest Common Ancestor of a Binary Tree", "Smallest Common Region", "Lowest Common Ancestor of a Binary Tree II", "Lowest Common Ancestor of a Binary Tree III", "Lowest Common Ancestor of a Binary Tree IV"]},
    {"Palindrome Linked List": ["Palindrome Number", "Valid Palindrome", "Reverse Linked List", "Maximum Twin Sum of a Linked List"]},
    {"Number of Digit One": ["Factorial Trailing Zeroes", "Digit Count in Range"]},
    {"Implement Queue using Stacks": ["Implement Stack using Queues"]},
    {"Power of Two": ["Number of 1 Bits", "Power of Three", "Power of Four"]},
    {"Kth Smallest Element in a BST": ["Binary Tree Inorder Traversal", "Second Minimum Node In a Binary Tree"]},
    {"Majority Element II": ["Majority Element", "Check If a Number Is Majority Element in a Sorted Array"]},
    {"Summary Ranges": ["Missing Ranges", "Data Stream as Disjoint Intervals"]},
    {"Basic Calculator II": ["Basic Calculator", "Expression Add Operators", "Basic Calculator III"]},
    {"Invert Binary Tree": []},
    {"Implement Stack using Queues": ["Implement Queue using Stacks"]},
    {"Basic Calculator": ["Evaluate Reverse Polish Notation", "Basic Calculator II", "Different Ways to Add Parentheses", "Expression Add Operators", "Basic Calculator III", "The Score of Students Solving Math Expression", "Minimize Result by Adding Parentheses to Expression"]},
    {"Rectangle Area": ["Rectangle Overlap"]},
    {"Count Complete Tree Nodes": ["Closest Binary Search Tree Value"]},
    {"Maximal Square": ["Maximal Rectangle", "Largest Plus Sign", "Count Artifacts That Can Be Extracted", "Stamping the Grid"]},
    {"Contains Duplicate III": ["Contains Duplicate", "Contains Duplicate II"]},
    {"Contains Duplicate II": ["Contains Duplicate", "Contains Duplicate III"]},
    {"The Skyline Problem": ["Falling Squares"]},
    {"Contains Duplicate": ["Contains Duplicate II", "Contains Duplicate III"]},
    {"Combination Sum III": ["Combination Sum"]},
    {"Kth Largest Element in an Array": ["Wiggle Sort II", "Top K Frequent Elements", "Third Maximum Number", "Kth Largest Element in a Stream", "K Closest Points to Origin", "Find the Kth Largest Integer in the Array", "Find Subsequence of Length K With the Largest Sum", "K Highest Ranked Items Within a Price Range"]},
    {"Shortest Palindrome": ["Longest Palindromic Substring", "Implement strStr()", "Palindrome Pairs"]},
    {"House Robber II": ["House Robber", "Paint House", "Paint Fence", "House Robber III", "Non-negative Integers without Consecutive Ones", "Coin Path"]},
    {"Word Search II": ["Word Search", "Unique Paths III", "Encrypt and Decrypt Strings"]},
    {"Design Add and Search Words Data Structure": ["Implement Trie (Prefix Tree)", "Prefix and Suffix Search"]},
    {"Course Schedule II": ["Course Schedule", "Alien Dictionary", "Minimum Height Trees", "Sequence Reconstruction", "Course Schedule III", "Parallel Courses", "Find All Possible Recipes from Given Supplies"]},
    {"Minimum Size Subarray Sum": ["Minimum Window Substring", "Maximum Size Subarray Sum Equals k", "Maximum Length of Repeated Subarray", "Minimum Operations to Reduce X to Zero", "K Radius Subarray Averages", "Maximum Product After K Increments"]},
    {"Implement Trie (Prefix Tree)": ["Design Add and Search Words Data Structure", "Design Search Autocomplete System", "Replace Words", "Implement Magic Dictionary", "Encrypt and Decrypt Strings", "Implement Trie II (Prefix Tree)"]},
    {"Course Schedule": ["Course Schedule II", "Graph Valid Tree", "Minimum Height Trees", "Course Schedule III"]},
    {"Reverse Linked List": ["Reverse Linked List II", "Binary Tree Upside Down", "Palindrome Linked List", "Reverse Nodes in Even Length Groups", "Maximum Twin Sum of a Linked List"]},
    {"Isomorphic Strings": ["Word Pattern"]},
    {"Count Primes": ["Ugly Number", "Ugly Number II", "Perfect Squares"]},
    {"Remove Linked List Elements": ["Remove Element", "Delete Node in a Linked List", "Delete the Middle Node of a Linked List"]},
    {"Happy Number": ["Linked List Cycle", "Add Digits", "Ugly Number", "Sum of Digits of String After Convert"]},
    {"Bitwise AND of Numbers Range": []},
    {"Number of Islands": ["Surrounded Regions", "Walls and Gates", "Number of Islands II", "Number of Connected Components in an Undirected Graph", "Number of Distinct Islands", "Max Area of Island", "Count Sub Islands", "Find All Groups of Farmland"]},
    {"Binary Tree Right Side View": ["Populating Next Right Pointers in Each Node", "Boundary of Binary Tree"]},
    {"House Robber": ["Maximum Product Subarray", "House Robber II", "Paint House", "Paint Fence", "House Robber III", "Non-negative Integers without Consecutive Ones", "Coin Path", "Delete and Earn", "Solving Questions With Brainpower"]},
    {"Rising Temperature": []},
    {"Delete Duplicate Emails": []},
    {"Tenth Line": []},
    {"Transpose File": []},
    {"Valid Phone Numbers": []},
    {"Word Frequency": ["Top K Frequent Elements"]},
    {"Number of 1 Bits": ["Reverse Bits", "Power of Two", "Counting Bits", "Binary Watch", "Hamming Distance", "Binary Number with Alternating Bits", "Prime Number of Set Bits in Binary Representation"]},
    {"Reverse Bits": ["Reverse Integer", "Number of 1 Bits", "A Number After a Double Reversal"]},
    {"Rotate Array": ["Rotate List", "Reverse Words in a String II"]},
    {"Best Time to Buy and Sell Stock IV": ["Best Time to Buy and Sell Stock", "Best Time to Buy and Sell Stock II", "Best Time to Buy and Sell Stock III"]},
    {"Repeated DNA Sequences": []},
    {"Reverse Words in a String II": ["Reverse Words in a String", "Rotate Array"]},
    {"Department Top Three Salaries": []},
    {"Department Highest Salary": ["Highest Grade For Each Student"]},
    {"Customers Who Never Order": []},
    {"Duplicate Emails": []},
    {"Employees Earning More Than Their Managers": []},
    {"Consecutive Numbers": []},
    {"Largest Number": ["Smallest Value of the Rearranged Number"]},
    {"Rank Scores": []},
    {"Nth Highest Salary": ["The Number of Users That Are Eligible for Discount"]},
    {"Second Highest Salary": []},
    {"Combine Two Tables": ["Employee Bonus"]},
    {"Dungeon Game": ["Unique Paths", "Minimum Path Sum", "Cherry Pickup", "Minimum Health to Beat Game"]},
    {"Binary Search Tree Iterator": ["Binary Tree Inorder Traversal", "Flatten 2D Vector", "Zigzag Iterator", "Peeking Iterator", "Inorder Successor in BST", "Binary Search Tree Iterator II"]},
    {"Factorial Trailing Zeroes": ["Number of Digit One", "Preimage Size of Factorial Zeroes Function", "Abbreviating the Product of a Range", "Maximum Trailing Zeros in a Cornered Path"]},
    {"Excel Sheet Column Number": ["Excel Sheet Column Title", "Cells in a Range on an Excel Sheet"]},
    {"Two Sum III - Data structure design": ["Two Sum", "Unique Word Abbreviation", "Two Sum IV - Input is a BST"]},
    {"Majority Element": ["Majority Element II", "Check If a Number Is Majority Element in a Sorted Array"]},
    {"Excel Sheet Column Title": ["Excel Sheet Column Number", "Cells in a Range on an Excel Sheet"]},
    {"Two Sum II - Input Array Is Sorted": ["Two Sum", "Two Sum IV - Input is a BST", "Two Sum Less Than K"]},
    {"Fraction to Recurring Decimal": []},
    {"Compare Version Numbers": []},
    {"Maximum Gap": []},
    {"Missing Ranges": ["Summary Ranges"]},
    {"Find Peak Element": ["Peak Index in a Mountain Array", "Find a Peak Element II", "Pour Water Between Buckets to Make Water Levels Equal", "Count Hills and Valleys in an Array"]},
    {"One Edit Distance": ["Edit Distance"]},
    {"Intersection of Two Linked Lists": ["Minimum Index Sum of Two Lists"]},
    {"Longest Substring with At Most Two Distinct Characters": ["Longest Substring Without Repeating Characters", "Sliding Window Maximum", "Longest Substring with At Most K Distinct Characters", "Subarrays with K Different Integers"]},
    {"Read N Characters Given read4 II - Call Multiple Times": ["Read N Characters Given Read4"]},
    {"Read N Characters Given Read4": ["Read N Characters Given read4 II - Call Multiple Times"]},
    {"Binary Tree Upside Down": ["Reverse Linked List"]},
    {"Min Stack": ["Sliding Window Maximum", "Max Stack"]},
    {"Find Minimum in Rotated Sorted Array II": ["Find Minimum in Rotated Sorted Array"]},
    {"Find Minimum in Rotated Sorted Array": ["Search in Rotated Sorted Array", "Find Minimum in Rotated Sorted Array II"]},
    {"Maximum Product Subarray": ["Maximum Subarray", "House Robber", "Product of Array Except Self", "Maximum Product of Three Numbers", "Subarray Product Less Than K"]},
    {"Reverse Words in a String": ["Reverse Words in a String II"]},
    {"Evaluate Reverse Polish Notation": ["Basic Calculator", "Expression Add Operators"]},
    {"Max Points on a Line": ["Line Reflection", "Minimum Number of Lines to Cover Points"]},
    {"Sort List": ["Merge Two Sorted Lists", "Sort Colors", "Insertion Sort List", "Sort Linked List Already Sorted Using Absolute Values"]},
    {"Insertion Sort List": ["Sort List", "Insert into a Sorted Circular Linked List"]},
    {"LRU Cache": ["LFU Cache", "Design In-Memory File System", "Design Compressed String Iterator", "Design Most Recently Used Queue"]},
    {"Binary Tree Postorder Traversal": ["Binary Tree Inorder Traversal", "N-ary Tree Postorder Traversal"]},
    {"Binary Tree Preorder Traversal": ["Binary Tree Inorder Traversal", "Verify Preorder Sequence in Binary Search Tree", "N-ary Tree Preorder Traversal"]},
    {"Reorder List": ["Delete the Middle Node of a Linked List"]},
    {"Linked List Cycle II": ["Linked List Cycle", "Find the Duplicate Number"]},
    {"Linked List Cycle": ["Linked List Cycle II", "Happy Number"]},
    {"Word Break II": ["Word Break", "Concatenated Words"]},
    {"Word Break": ["Word Break II"]},
    {"Copy List with Random Pointer": ["Clone Graph", "Clone Binary Tree With Random Pointer", "Clone N-ary Tree"]},
    {"Single Number II": ["Single Number", "Single Number III"]},
    {"Single Number": ["Single Number II", "Single Number III", "Missing Number", "Find the Duplicate Number", "Find the Difference"]},
    {"Candy": []},
    {"Gas Station": ["Maximize the Topmost Element After K Moves"]},
    {"Clone Graph": ["Copy List with Random Pointer", "Clone Binary Tree With Random Pointer", "Clone N-ary Tree"]},
    {"Palindrome Partitioning II": ["Palindrome Partitioning", "Palindrome Partitioning IV"]},
    {"Palindrome Partitioning": ["Palindrome Partitioning II", "Palindrome Partitioning IV"]},
    {"Surrounded Regions": ["Number of Islands", "Walls and Gates"]},
    {"Sum Root to Leaf Numbers": ["Path Sum", "Binary Tree Maximum Path Sum", "Smallest String Starting From Leaf"]},
    {"Longest Consecutive Sequence": ["Binary Tree Longest Consecutive Sequence", "Find Three Consecutive Integers That Sum to a Given Number"]},
    {"Word Ladder": ["Word Ladder II", "Minimum Genetic Mutation"]},
    {"Word Ladder II": ["Word Ladder", "Groups of Strings"]},
    {"Valid Palindrome": ["Palindrome Linked List", "Valid Palindrome II", "Maximum Product of the Length of Two Palindromic Subsequences", "Find First Palindromic String in the Array"]},
    {"Binary Tree Maximum Path Sum": ["Path Sum", "Sum Root to Leaf Numbers", "Path Sum IV", "Longest Univalue Path", "Time Needed to Inform All Employees"]},
    {"Best Time to Buy and Sell Stock III": ["Best Time to Buy and Sell Stock", "Best Time to Buy and Sell Stock II", "Best Time to Buy and Sell Stock IV", "Maximum Sum of 3 Non-Overlapping Subarrays"]},
    {"Best Time to Buy and Sell Stock II": ["Best Time to Buy and Sell Stock", "Best Time to Buy and Sell Stock III", "Best Time to Buy and Sell Stock IV", "Best Time to Buy and Sell Stock with Cooldown", "Best Time to Buy and Sell Stock with Transaction Fee"]},
    {"Best Time to Buy and Sell Stock": ["Maximum Subarray", "Best Time to Buy and Sell Stock II", "Best Time to Buy and Sell Stock III", "Best Time to Buy and Sell Stock IV", "Best Time to Buy and Sell Stock with Cooldown", "Sum of Beauty in the Array", "Maximum Difference Between Increasing Elements"]},
    {"Triangle": []},
    {"Pascal's Triangle II": ["Pascal's Triangle", "Find Triangular Sum of an Array"]},
    {"Pascal's Triangle": ["Pascal's Triangle II"]},
    {"Populating Next Right Pointers in Each Node II": ["Populating Next Right Pointers in Each Node"]},
    {"Populating Next Right Pointers in Each Node": ["Populating Next Right Pointers in Each Node II", "Binary Tree Right Side View"]},
    {"Distinct Subsequences": ["Number of Unique Good Subsequences"]},
    {"Flatten Binary Tree to Linked List": ["Flatten a Multilevel Doubly Linked List", "Correct a Binary Tree"]},
    {"Path Sum II": ["Path Sum", "Binary Tree Paths", "Path Sum III", "Path Sum IV", "Step-By-Step Directions From a Binary Tree Node to Another"]},
    {"Path Sum": ["Path Sum II", "Binary Tree Maximum Path Sum", "Sum Root to Leaf Numbers", "Path Sum III", "Path Sum IV"]},
    {"Minimum Depth of Binary Tree": ["Binary Tree Level Order Traversal", "Maximum Depth of Binary Tree"]},
    {"Balanced Binary Tree": ["Maximum Depth of Binary Tree"]},
    {"Convert Sorted List to Binary Search Tree": ["Convert Sorted Array to Binary Search Tree", "Create Binary Tree From Descriptions"]},
    {"Convert Sorted Array to Binary Search Tree": ["Convert Sorted List to Binary Search Tree"]},
    {"Binary Tree Level Order Traversal II": ["Binary Tree Level Order Traversal", "Average of Levels in Binary Tree"]},
    {"Construct Binary Tree from Inorder and Postorder Traversal": ["Construct Binary Tree from Preorder and Inorder Traversal"]},
    {"Construct Binary Tree from Preorder and Inorder Traversal": ["Construct Binary Tree from Inorder and Postorder Traversal"]},
    {"Maximum Depth of Binary Tree": ["Balanced Binary Tree", "Minimum Depth of Binary Tree", "Maximum Depth of N-ary Tree", "Time Needed to Inform All Employees"]},
    {"Binary Tree Zigzag Level Order Traversal": ["Binary Tree Level Order Traversal"]},
    {"Binary Tree Level Order Traversal": ["Binary Tree Zigzag Level Order Traversal", "Binary Tree Level Order Traversal II", "Minimum Depth of Binary Tree", "Binary Tree Vertical Order Traversal", "Average of Levels in Binary Tree", "N-ary Tree Level Order Traversal", "Cousins in Binary Tree"]},
    {"Symmetric Tree": []},
    {"Same Tree": []},
    {"Recover Binary Search Tree": []},
    {"Validate Binary Search Tree": ["Binary Tree Inorder Traversal", "Find Mode in Binary Search Tree"]},
    {"Interleaving String": []},
    {"Unique Binary Search Trees": ["Unique Binary Search Trees II"]},
    {"Unique Binary Search Trees II": ["Unique Binary Search Trees", "Different Ways to Add Parentheses"]},
    {"Binary Tree Inorder Traversal": ["Validate Binary Search Tree", "Binary Tree Preorder Traversal", "Binary Tree Postorder Traversal", "Binary Search Tree Iterator", "Kth Smallest Element in a BST", "Closest Binary Search Tree Value II", "Inorder Successor in BST", "Convert Binary Search Tree to Sorted Doubly Linked List", "Minimum Distance Between BST Nodes"]},
    {"Restore IP Addresses": ["IP to CIDR"]},
    {"Reverse Linked List II": ["Reverse Linked List"]},
    {"Decode Ways": ["Decode Ways II", "Number of Ways to Separate Numbers"]},
    {"Subsets II": ["Subsets", "Find Array Given Subset Sums"]},
    {"Gray Code": ["1-bit and 2-bit Characters"]},
    {"Merge Sorted Array": ["Merge Two Sorted Lists", "Squares of a Sorted Array", "Interval List Intersections"]},
    {"Scramble String": []},
    {"Partition List": ["Partition Array According to Given Pivot"]},
    {"Maximal Rectangle": ["Largest Rectangle in Histogram", "Maximal Square"]},
    {"Largest Rectangle in Histogram": ["Maximal Rectangle", "Maximum Score of a Good Subarray"]},
    {"Remove Duplicates from Sorted List": ["Remove Duplicates from Sorted List II", "Remove Duplicates From an Unsorted Linked List"]},
    {"Remove Duplicates from Sorted List II": ["Remove Duplicates from Sorted List", "Remove Duplicates From an Unsorted Linked List"]},
    {"Search in Rotated Sorted Array II": ["Search in Rotated Sorted Array"]},
    {"Remove Duplicates from Sorted Array II": ["Remove Duplicates from Sorted Array"]},
    {"Word Search": ["Word Search II"]},
    {"Subsets": ["Subsets II", "Generalized Abbreviation", "Letter Case Permutation", "Find Array Given Subset Sums", "Count Number of Maximum Bitwise-OR Subsets"]},
    {"Combinations": ["Combination Sum", "Permutations"]},
    {"Minimum Window Substring": ["Substring with Concatenation of All Words", "Minimum Size Subarray Sum", "Sliding Window Maximum", "Permutation in String", "Smallest Range Covering Elements from K Lists", "Minimum Window Subsequence"]},
    {"Sort Colors": ["Sort List", "Wiggle Sort", "Wiggle Sort II"]},
    {"Search a 2D Matrix": ["Search a 2D Matrix II"]},
    {"Set Matrix Zeroes": ["Game of Life", "Number of Laser Beams in a Bank", "Minimum Operations to Remove Adjacent Ones in Matrix", "Remove All Ones With Row and Column Flips II"]},
    {"Edit Distance": ["One Edit Distance", "Delete Operation for Two Strings", "Minimum ASCII Delete Sum for Two Strings", "Uncrossed Lines", "Minimum White Tiles After Covering With Carpets"]},
    {"Simplify Path": []},
    {"Climbing Stairs": ["Min Cost Climbing Stairs", "Fibonacci Number", "N-th Tribonacci Number", "Minimum Rounds to Complete All Tasks"]},
    {"Sqrt(x)": ["Pow(x, n)", "Valid Perfect Square"]},
    {"Text Justification": ["Rearrange Spaces Between Words", "Divide a String Into Groups of Size k"]},
    {"Add Binary": ["Add Two Numbers", "Multiply Strings", "Plus One", "Add to Array-Form of Integer"]},
    {"Plus One": ["Multiply Strings", "Add Binary", "Plus One Linked List", "Add to Array-Form of Integer"]},
    {"Valid Number": ["String to Integer (atoi)"]},
    {"Minimum Path Sum": ["Unique Paths", "Dungeon Game", "Cherry Pickup", "Maximum Number of Points with Cost", "Minimum Cost Homecoming of a Robot in a Grid"]},
    {"Unique Paths II": ["Unique Paths", "Unique Paths III"]},
    {"Unique Paths": ["Unique Paths II", "Minimum Path Sum", "Dungeon Game", "Minimum Cost Homecoming of a Robot in a Grid"]},
    {"Rotate List": ["Rotate Array", "Split Linked List in Parts"]},
    {"Permutation Sequence": ["Next Permutation", "Permutations"]},
    {"Spiral Matrix II": ["Spiral Matrix", "Spiral Matrix III"]},
    {"Length of Last Word": []},
    {"Insert Interval": ["Merge Intervals", "Range Module"]},
    {"Merge Intervals": ["Insert Interval", "Meeting Rooms", "Meeting Rooms II", "Teemo Attacking", "Add Bold Tag in String", "Range Module", "Employee Free Time", "Partition Labels", "Interval List Intersections", "Amount of New Area Painted Each Day", "Longest Substring of One Repeating Character"]},
    {"Jump Game": ["Jump Game II", "Jump Game III", "Jump Game VII"]},
    {"Spiral Matrix": ["Spiral Matrix II", "Spiral Matrix III"]},
    {"Maximum Subarray": ["Best Time to Buy and Sell Stock", "Maximum Product Subarray", "Degree of an Array", "Longest Turbulent Subarray", "Maximum Absolute Sum of Any Subarray", "Maximum Subarray Sum After One Operation"]},
    {"N-Queens II": ["N-Queens"]},
    {"N-Queens": ["N-Queens II", "Grid Illumination"]},
    {"Pow(x, n)": ["Sqrt(x)", "Super Pow"]},
    {"Group Anagrams": ["Valid Anagram", "Group Shifted Strings"]},
    {"Rotate Image": ["Determine Whether Matrix Can Be Obtained By Rotation"]},
    {"Permutations II": ["Next Permutation", "Permutations", "Palindrome Permutation II", "Number of Squareful Arrays"]},
    {"Permutations": ["Next Permutation", "Permutations II", "Permutation Sequence", "Combinations"]},
    {"Jump Game II": ["Jump Game", "Jump Game III", "Jump Game VII"]},
    {"Wildcard Matching": ["Regular Expression Matching"]},
    {"Multiply Strings": ["Add Two Numbers", "Plus One", "Add Binary", "Add Strings"]},
    {"Remove Element": ["Remove Duplicates from Sorted Array", "Remove Linked List Elements", "Move Zeroes"]},
    {"Remove Duplicates from Sorted Array": ["Remove Element", "Remove Duplicates from Sorted Array II"]},
    {"Reverse Nodes in k-Group": ["Swap Nodes in Pairs", "Swapping Nodes in a Linked List", "Reverse Nodes in Even Length Groups"]},
    {"Swap Nodes in Pairs": ["Reverse Nodes in k-Group", "Swapping Nodes in a Linked List"]},
    {"Merge k Sorted Lists": ["Merge Two Sorted Lists", "Ugly Number II"]},
    {"Generate Parentheses": ["Letter Combinations of a Phone Number", "Valid Parentheses", "Check if a Parentheses String Can Be Valid"]},
    {"Merge Two Sorted Lists": ["Merge k Sorted Lists", "Merge Sorted Array", "Sort List", "Shortest Word Distance II", "Add Two Polynomials Represented as Linked Lists", "Longest Common Subsequence Between Sorted Arrays"]},
    {"Valid Parentheses": ["Generate Parentheses", "Longest Valid Parentheses", "Remove Invalid Parentheses", "Check If Word Is Valid After Substitutions", "Check if a Parentheses String Can Be Valid"]},
    {"Remove Nth Node From End of List": ["Swapping Nodes in a Linked List", "Delete N Nodes After M Nodes of a Linked List", "Delete the Middle Node of a Linked List"]},
    {"4Sum": ["Two Sum", "3Sum", "4Sum II", "Count Special Quadruplets"]},
    {"Letter Combinations of a Phone Number": ["Generate Parentheses", "Combination Sum", "Binary Watch"]},
    {"3Sum Closest": ["3Sum", "3Sum Smaller"]},
    {"3Sum": ["Two Sum", "3Sum Closest", "4Sum", "3Sum Smaller"]},
    {"Longest Common Prefix": []},
    {"Roman to Integer": ["Integer to Roman"]},
    {"Integer to Roman": ["Roman to Integer", "Integer to English Words"]},
    {"Container With Most Water": ["Trapping Rain Water"]},
    {"Regular Expression Matching": ["Wildcard Matching"]},
    {"Palindrome Number": ["Palindrome Linked List", "Find Palindrome With Fixed Length"]},
    {"String to Integer (atoi)": ["Reverse Integer", "Valid Number", "Check if Numbers Are Ascending in a Sentence"]},
    {"Reverse Integer": ["String to Integer (atoi)", "Reverse Bits", "A Number After a Double Reversal"]},
    {"Zigzag Conversion": []},
    {"Longest Palindromic Substring": ["Shortest Palindrome", "Palindrome Permutation", "Palindrome Pairs", "Longest Palindromic Subsequence", "Palindromic Substrings"]},
    {"Median of Two Sorted Arrays": []},
    {"Longest Substring Without Repeating Characters": ["Longest Substring with At Most Two Distinct Characters", "Longest Substring with At Most K Distinct Characters", "Subarrays with K Different Integers", "Maximum Erasure Value", "Number of Equal Count Substrings"]},
    {"Add Two Numbers": ["Multiply Strings", "Add Binary", "Sum of Two Integers", "Add Strings", "Add Two Numbers II", "Add to Array-Form of Integer", "Add Two Polynomials Represented as Linked Lists"]}
    ]